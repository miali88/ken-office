{"version":3,"file":"word-main.js","mappings":"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","sources":["webpack://kenneth-office-addin-unified/./src/word/mockLLMResponse.ts","webpack://kenneth-office-addin-unified/./src/word/ai-rewrite-structured.ts","webpack://kenneth-office-addin-unified/./src/word/drafting-tab.ts","webpack://kenneth-office-addin-unified/./src/word/ai-chat-tab.ts","webpack://kenneth-office-addin-unified/./src/word/mockChecklistData.ts","webpack://kenneth-office-addin-unified/./src/word/checklist-tab.ts","webpack://kenneth-office-addin-unified/./src/word/word-main.ts"],"sourcesContent":["/**\n * Mock LLM Response Data for Demo\n *\n * This file contains hardcoded document operations that simulate\n * what an AI backend would return. Perfect for demos without\n * requiring a live backend service.\n */\n\nimport type { DocumentOperation } from './types';\n\nexport const MOCK_LLM_OPERATIONS: DocumentOperation[] = [\n  {\n    type: \"replaceText\",\n    target: \"(years ending DD MM YYYY\",\n    value: \"years ending 31 March 2024\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\",\n      reasoning: \"Financial year end dates extracted from company accounts filings\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"company_name\",\n    value: \"ABERDEEN HOUSE CARE LIMITED\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"replaceText\",\n    target: \"….\",\n    value: \"10 September 2025\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replaceText\",\n    target: \"(introducer)\",\n    value: \"[TO BE COMPLETED - Introducer Name]\",\n    metadata: {\n      confidence: \"low\",\n      source: \"manual input\"\n    }\n  },\n  {\n    type: \"replaceText\",\n    target: \"{{ CONDITION_1:\",\n    value: \"\",\n    matchCase: false,\n    metadata: {\n      confidence: \"medium\",\n      source: \"default assumption\",\n      reasoning: \"Remove conditional marker\"\n    }\n  },\n  {\n    type: \"replaceText\",\n    target: \"EITHER: Prior to this date, neither the firm nor the proposed Liquidators have had any other involvement with the Company or its Director. OR: Prior to this date, the proposed liquidators have had involvement with the director\",\n    value: \"Prior to this date, neither the firm nor the proposed Liquidators have had any other involvement with the Company or its Director.\",\n    matchCase: false,\n    metadata: {\n      confidence: \"medium\",\n      source: \"default assumption\",\n      reasoning: \"Replace conditional options with chosen option\"\n    }\n  },\n  {\n    type: \"replaceText\",\n    target: \"whether prior relationship has existed.\",\n    value: \"\",\n    matchCase: false,\n    metadata: {\n      confidence: \"medium\",\n      source: \"default assumption\",\n      reasoning: \"Remove conditional description\"\n    }\n  },\n  {\n    type: \"replaceText\",\n    target: \"}}\",\n    value: \"\",\n    matchCase: false,\n    metadata: {\n      confidence: \"high\",\n      source: \"template cleanup\",\n      reasoning: \"Remove closing conditional brackets\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{our_firm_name}}\",\n    value: \"Kenneth AI\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{instruction_date}}\",\n    value: \"10 September 2025\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{date_scheduled_for_s100}}\",\n    value: \"13 September 2025\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{general_meeting_notice_date}}\",\n    value: \"06 September 2025\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{general_meeting_datetime}}\",\n    value: \"13 September 2025 at 10:00 AM\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{full_names_address_of_ip}}\",\n    value: \"ABERDEEN HOUSE CARE LIMITED, 123 Fictional Lane, Anytown, AB1 2CD\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"case details and searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{incorporation_date}}\",\n    value: \"15 June 2011\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{company_reg_number}}\",\n    value: \"07658860\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{trading_address}}\",\n    value: \"456 Business Road, Cityville, CV1 2EF\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{company_trading_activity}}\",\n    value: \"Operating care homes\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"deleteText\",\n    target: \"{{below table should be populated with list of previous registered addresses}}\",\n    metadata: {\n      confidence: \"high\",\n      reasoning: \"Template instruction for table below\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 1,\n    cell: 0,\n    value: \"15 June 2011\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 1,\n    cell: 1,\n    value: \"31 December 2023\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 1,\n    cell: 2,\n    value: \"789 Old Street, Townsville, TS1 2GH\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 2,\n    cell: 0,\n    value: \"01 January 2024\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 2,\n    cell: 1,\n    value: \"Current\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 2,\n    cell: 2,\n    value: \"Business Helpline Group Limited, 101 New Avenue, Metropolis, MT1 2IJ\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{equity_capital_structure}}\",\n    value: \"is £100,000, comprising 100,000 Ordinary shares of £1 each\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"deleteText\",\n    target: \"{{below table should list the name, shares and percentage of each shareholder}}\",\n    metadata: {\n      confidence: \"high\",\n      reasoning: \"Template instruction for table below\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 1,\n    cell: 0,\n    value: \"KOTECHA, Rakesh\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 1,\n    cell: 1,\n    value: \"50,000\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 1,\n    cell: 2,\n    value: \"50%\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 2,\n    cell: 0,\n    value: \"KOTECHA, Mahesh Vithaldas\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 2,\n    cell: 1,\n    value: \"50,000\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 2,\n    cell: 2,\n    value: \"50%\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"deleteText\",\n    target: \"{{below table should list the schema for officers of the company}}\",\n    metadata: {\n      confidence: \"high\",\n      reasoning: \"Template instruction for table below\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 1,\n    cell: 0,\n    value: \"KOTECHA, Rakesh\",\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 1,\n    cell: 1,\n    value: \"Director\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 1,\n    cell: 2,\n    value: \"15 June 2011\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 1,\n    cell: 3,\n    value: \"N/A\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 2,\n    cell: 0,\n    value: \"KOTECHA, Mahesh Vithaldas\",\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 2,\n    cell: 1,\n    value: \"Director\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 2,\n    cell: 2,\n    value: \"15 June 2011\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 2,\n    cell: 3,\n    value: \"N/A\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 3,\n    cell: 0,\n    value: \"KOTECHA, Pragna\",\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 3,\n    cell: 1,\n    value: \"Director\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 3,\n    cell: 2,\n    value: \"01 January 2015\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 3,\n    cell: 3,\n    value: \"N/A\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 4,\n    cell: 0,\n    value: \"KOTECHA, Trushali\",\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 4,\n    cell: 1,\n    value: \"Director\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 4,\n    cell: 2,\n    value: \"01 January 2015\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 4,\n    cell: 3,\n    value: \"N/A\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  }\n];\n","/**\n * AI Document Rewrite with Structured Operations - SIMPLIFIED VERSION\n *\n * Shows live progress in the UI and catches errors at each step\n */\n\n/* global Word */\n\nimport type { DocumentStructure, TableStructure, DocumentOperation } from './types';\nimport { MOCK_LLM_OPERATIONS } from './mockLLMResponse';\n\n/**\n * Main handler for structured AI document rewrite\n */\nexport async function handleStructuredAIRewrite(): Promise<void> {\n  const statusElement = document.getElementById(\"rewrite-status\");\n  const progressContainer = document.getElementById(\"progress-container\");\n  const progressBar = document.getElementById(\"progress-bar\");\n  const progressText = document.getElementById(\"progress-text\");\n  const button = document.getElementById(\"ai-rewrite-btn\") as HTMLButtonElement;\n\n  if (!statusElement || !button) {\n    alert(\"Required UI elements not found\");\n    return;\n  }\n\n  // Create live debug log that shows in the UI\n  let debugLog: string[] = [];\n  const addLog = (message: string, isError = false) => {\n    const timestamp = new Date().toLocaleTimeString();\n    const logLine = `${timestamp} ${message}`;\n    debugLog.push(logLine);\n    console.log(logLine);\n\n    // Update UI immediately\n    const color = isError ? '#d32f2f' : '#666';\n    statusElement.innerHTML = `\n      <div style=\"padding: 12px; background: ${isError ? '#ffebee' : '#f5f5f5'}; border-radius: 4px; border: 1px solid ${isError ? '#ef5350' : '#ddd'};\">\n        <div style=\"margin-bottom: 8px; font-weight: bold; color: ${color};\">${message}</div>\n        <div style=\"max-height: 200px; overflow-y: auto; font-size: 11px; font-family: monospace; background: white; padding: 8px; border-radius: 4px;\">\n          ${debugLog.map(line => `<div style=\"margin: 2px 0;\">${line}</div>`).join('')}\n        </div>\n      </div>\n    `;\n  };\n\n  try {\n    button.disabled = true;\n    if (progressContainer) progressContainer.style.display = 'block';\n\n    // =========================================================================\n    // STEP 1: Extract document text (SIMPLIFIED - NO TABLES)\n    // =========================================================================\n    addLog(\"📖 STEP 1/3: Extracting document text...\");\n    if (progressText) progressText.textContent = \"Step 1/3: Reading document\";\n    if (progressBar) progressBar.style.width = '10%';\n\n    let structure: DocumentStructure;\n    try {\n      addLog(\"  Loading document body...\");\n      structure = await extractDocumentSimplified();\n      addLog(`  ✅ Extracted ${structure.text.length} chars, ${structure.placeholders.length} placeholders`);\n      if (progressBar) progressBar.style.width = '33%';\n    } catch (extractError) {\n      const errMsg = extractError instanceof Error ? extractError.message : String(extractError);\n      addLog(`❌ EXTRACTION FAILED: ${errMsg}`, true);\n      throw new Error(`Step 1 failed: ${errMsg}`);\n    }\n\n    // =========================================================================\n    // STEP 2: Load mock AI response (DEMO MODE - NO BACKEND)\n    // =========================================================================\n    addLog(\"🤖 STEP 2/3: Loading mock AI response...\");\n    if (progressText) progressText.textContent = \"Step 2/3: AI processing (mock data)\";\n    if (progressBar) progressBar.style.width = '40%';\n\n    let operations: DocumentOperation[];\n    try {\n      addLog(\"  Loading pre-configured operations...\");\n\n      operations = await getMockOperations(structure, addLog);\n\n      addLog(`  ✅ Loaded ${operations.length} operations from mock data`);\n      if (progressBar) progressBar.style.width = '66%';\n    } catch (mockError) {\n      const errMsg = mockError instanceof Error ? mockError.message : String(mockError);\n      addLog(`❌ MOCK DATA LOADING FAILED: ${errMsg}`, true);\n      throw new Error(`Step 2 failed: ${errMsg}`);\n    }\n\n    // =========================================================================\n    // STEP 3: Execute operations\n    // =========================================================================\n    addLog(\"✍️ STEP 3/3: Applying changes to document...\");\n    if (progressText) progressText.textContent = \"Step 3/3: Applying changes\";\n    if (progressBar) progressBar.style.width = '75%';\n\n    try {\n      await executeOperations(operations);\n      addLog(`  ✅ Applied all ${operations.length} operations`);\n      if (progressBar) progressBar.style.width = '100%';\n    } catch (executeError) {\n      const errMsg = executeError instanceof Error ? executeError.message : String(executeError);\n      addLog(`❌ EXECUTION FAILED: ${errMsg}`, true);\n      throw new Error(`Step 3 failed: ${errMsg}`);\n    }\n\n    // =========================================================================\n    // SUCCESS!\n    // =========================================================================\n    statusElement.innerHTML = `\n      <div style=\"padding: 12px; background: #e8f5e9; border: 2px solid #4caf50; border-radius: 4px;\">\n        <div style=\"color: #2e7d32; font-weight: bold; margin-bottom: 8px;\">✅ Document updated successfully!</div>\n        <div style=\"max-height: 200px; overflow-y: auto; font-size: 11px; font-family: monospace; background: white; padding: 8px; border-radius: 4px;\">\n          ${debugLog.map(line => `<div style=\"margin: 2px 0;\">${line}</div>`).join('')}\n        </div>\n      </div>\n    `;\n    if (progressText) progressText.textContent = \"Complete!\";\n\n    setTimeout(() => {\n      if (progressContainer) progressContainer.style.display = 'none';\n    }, 3000);\n\n  } catch (error) {\n    console.error('[FATAL ERROR]', error);\n\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    const errorStack = error instanceof Error ? error.stack : '';\n\n    statusElement.innerHTML = `\n      <div style=\"padding: 12px; background: #ffebee; border: 2px solid #d32f2f; border-radius: 4px;\">\n        <div style=\"color: #d32f2f; font-weight: bold; margin-bottom: 8px; font-size: 16px;\">❌ PROCESS FAILED</div>\n        <div style=\"margin-bottom: 12px; color: #333; font-size: 14px;\">${errorMessage}</div>\n        <div style=\"margin-bottom: 12px; max-height: 200px; overflow-y: auto; font-size: 11px; font-family: monospace; background: white; padding: 8px; border-radius: 4px;\">\n          ${debugLog.map(line => `<div style=\"margin: 2px 0;\">${line}</div>`).join('')}\n        </div>\n        <details style=\"margin-top: 8px;\">\n          <summary style=\"cursor: pointer; color: #d32f2f; font-size: 12px;\">Show stack trace</summary>\n          <pre style=\"font-size: 10px; margin-top: 4px; background: #f5f5f5; padding: 8px; border-radius: 4px; overflow-x: auto; white-space: pre-wrap;\">${errorStack || 'No stack trace available'}</pre>\n        </details>\n      </div>\n    `;\n\n    if (progressText) {\n      progressText.textContent = \"FAILED\";\n      progressText.style.color = '#d32f2f';\n    }\n\n    if (progressBar) {\n      (progressBar as HTMLElement).style.background = '#d32f2f';\n    }\n  } finally {\n    button.disabled = false;\n  }\n}\n\n/**\n * Extract document structure - SIMPLIFIED VERSION (no tables)\n */\nasync function extractDocumentSimplified(): Promise<DocumentStructure> {\n  return Word.run(async (context) => {\n    const body = context.document.body;\n    body.load('text');\n    await context.sync();\n\n    const text = body.text;\n\n    // Extract placeholders\n    const placeholderRegex = /\\{\\{[^}]+\\}\\}/g;\n    const placeholders = Array.from(new Set(text.match(placeholderRegex) || []));\n\n    // Return simple structure WITHOUT tables for now\n    return {\n      text,\n      tables: [],\n      placeholders\n    };\n  });\n}\n\n/**\n * Load mock operations (DEMO MODE - NO BACKEND)\n * Simulates what a real AI backend would return\n */\nasync function getMockOperations(\n  structure: DocumentStructure,\n  addLog: (msg: string, isError?: boolean) => void\n): Promise<DocumentOperation[]> {\n  addLog(\"  📦 Using hardcoded mock data (no backend required)\");\n\n  // Simulate realistic network/processing delay for better UX\n  await new Promise(resolve => setTimeout(resolve, 800));\n\n  addLog(`  ✅ Mock data contains ${MOCK_LLM_OPERATIONS.length} operations`);\n  addLog(`  ℹ️  This is DEMO MODE - edit mockLLMResponse.ts to change operations`);\n\n  return MOCK_LLM_OPERATIONS;\n}\n\n/**\n * Execute operations on Word document\n */\nasync function executeOperations(operations: DocumentOperation[]): Promise<void> {\n  return Word.run(async (context) => {\n    console.log('[Operations] Starting execution, count:', operations.length);\n\n    // Enable track changes\n    context.document.changeTrackingMode = Word.ChangeTrackingMode.trackAll;\n\n    try {\n      context.document.properties.author = \"Kenneth AI\";\n      context.document.properties.load('author');\n    } catch (e) {\n      console.warn(\"Could not set author:\", e);\n    }\n\n    await context.sync();\n\n    let successCount = 0;\n    let failureCount = 0;\n\n    // Group fillTableCell operations by tableIndex\n    const tableOperationsMap = new Map<number, Array<Extract<DocumentOperation, { type: 'fillTableCell' }>>>();\n    const nonTableOperations: DocumentOperation[] = [];\n\n    for (const operation of operations) {\n      if (operation.type === 'fillTableCell') {\n        const tableOps = tableOperationsMap.get(operation.tableIndex) || [];\n        tableOps.push(operation);\n        tableOperationsMap.set(operation.tableIndex, tableOps);\n      } else {\n        nonTableOperations.push(operation);\n      }\n    }\n\n    // Execute table operations grouped by table (one comment per table)\n    const tableEntries = Array.from(tableOperationsMap.entries());\n    for (const [tableIndex, tableOps] of tableEntries) {\n      console.log(`[Table ${tableIndex}] Processing ${tableOps.length} cell operations`);\n\n      try {\n        await executeTableOperations(context, tableIndex, tableOps);\n        await context.sync();\n        successCount += tableOps.length;\n      } catch (error) {\n        failureCount += tableOps.length;\n        console.error(`Table ${tableIndex} operations failed:`, error);\n      }\n    }\n\n    // Execute non-table operations individually\n    for (let i = 0; i < nonTableOperations.length; i++) {\n      const operation = nonTableOperations[i];\n      console.log(`[Operation ${i + 1}/${nonTableOperations.length}] Type: ${operation.type}`);\n\n      try {\n        switch (operation.type) {\n          case 'replacePlaceholder':\n            await executeReplacePlaceholder(context, operation);\n            break;\n          case 'replaceText':\n            await executeReplaceText(context, operation);\n            break;\n          case 'deleteText':\n            await executeDeleteText(context, operation);\n            break;\n          default:\n            console.warn(`Unknown operation type:`, operation);\n            failureCount++;\n            continue;\n        }\n\n        await context.sync();\n        successCount++;\n      } catch (error) {\n        failureCount++;\n        console.error(`Operation ${i} failed:`, error);\n      }\n    }\n\n    console.log('[Operations] Complete:', { total: operations.length, success: successCount, failed: failureCount });\n  });\n}\n\n/**\n * Execute all table operations for a specific table and add ONE comment\n */\nasync function executeTableOperations(\n  context: Word.RequestContext,\n  tableIndex: number,\n  operations: Array<Extract<DocumentOperation, { type: 'fillTableCell' }>>\n): Promise<void> {\n  const tables = context.document.body.tables;\n  tables.load('items');\n  await context.sync();\n\n  if (tableIndex >= tables.items.length) {\n    console.warn(`Table ${tableIndex} not found`);\n    return;\n  }\n\n  const table = tables.items[tableIndex];\n  const rows = table.rows;\n  rows.load('items');\n  await context.sync();\n\n  // Track which cells were modified for the comment summary\n  const modifiedCells: Array<{ row: number; cell: number; value: string }> = [];\n\n  // Fill all cells in this table\n  for (const operation of operations) {\n    if (operation.row >= rows.items.length) {\n      console.warn(`Row ${operation.row} not found in table ${tableIndex}`);\n      continue;\n    }\n\n    const row = rows.items[operation.row];\n    const cells = row.cells;\n    cells.load('items');\n    await context.sync();\n\n    if (operation.cell >= cells.items.length) {\n      console.warn(`Cell ${operation.cell} not found in row ${operation.row}`);\n      continue;\n    }\n\n    const cell = cells.items[operation.cell];\n    cell.body.clear();\n    cell.body.insertText(operation.value, Word.InsertLocation.start);\n\n    modifiedCells.push({\n      row: operation.row,\n      cell: operation.cell,\n      value: operation.value\n    });\n  }\n\n  // Add ONE comment to the first modified cell\n  if (modifiedCells.length > 0 && operations.length > 0) {\n    try {\n      // Get the first modified cell to attach the comment\n      const firstOp = operations[0];\n      const firstRow = rows.items[firstOp.row];\n      const firstCells = firstRow.cells;\n      firstCells.load('items');\n      await context.sync();\n\n      const firstCell = firstCells.items[firstOp.cell];\n      const range = firstCell.body.getRange();\n\n      // Build a comprehensive comment for all table changes\n      const commentText = buildTableCommentText(tableIndex, modifiedCells, operations[0].metadata);\n      range.insertComment(commentText);\n\n      console.log(`Added single comment to table ${tableIndex} summarizing ${modifiedCells.length} cell changes`);\n    } catch (e) {\n      console.warn('Could not add comment to table:', e);\n    }\n  }\n}\n\n/**\n * Execute fillTableCell operation (LEGACY - kept for compatibility)\n */\nasync function executeFillTableCell(\n  context: Word.RequestContext,\n  operation: Extract<DocumentOperation, { type: 'fillTableCell' }>\n): Promise<void> {\n  const tables = context.document.body.tables;\n  tables.load('items');\n  await context.sync();\n\n  if (operation.tableIndex >= tables.items.length) {\n    console.warn(`Table ${operation.tableIndex} not found`);\n    return;\n  }\n\n  const table = tables.items[operation.tableIndex];\n  const rows = table.rows;\n  rows.load('items');\n  await context.sync();\n\n  if (operation.row >= rows.items.length) {\n    console.warn(`Row ${operation.row} not found`);\n    return;\n  }\n\n  const row = rows.items[operation.row];\n  const cells = row.cells;\n  cells.load('items');\n  await context.sync();\n\n  if (operation.cell >= cells.items.length) {\n    console.warn(`Cell ${operation.cell} not found`);\n    return;\n  }\n\n  const cell = cells.items[operation.cell];\n  cell.body.clear();\n  const insertedRange = cell.body.insertText(operation.value, Word.InsertLocation.start);\n\n  // Add comment with metadata\n  try {\n    const commentText = buildCommentText('fillTableCell', operation.value, operation.metadata);\n    // Insert comment on the text range, not the cell body\n    insertedRange.insertComment(commentText);\n    console.log('Comment added successfully to table cell:', operation.row, operation.cell);\n  } catch (e) {\n    console.warn('Could not add comment to table cell:', e);\n  }\n}\n\n/**\n * Execute replacePlaceholder operation\n */\nasync function executeReplacePlaceholder(\n  context: Word.RequestContext,\n  operation: Extract<DocumentOperation, { type: 'replacePlaceholder' }>\n): Promise<void> {\n  const MAX_SEARCH_LENGTH = 200;\n  const isLongPlaceholder = operation.target.length > MAX_SEARCH_LENGTH;\n\n  let searchTerm = operation.target;\n\n  if (isLongPlaceholder) {\n    const prefixMatch = operation.target.match(/^(\\{\\{[\\s]*[A-Z_0-9]+[\\s]*:)/);\n    searchTerm = prefixMatch ? prefixMatch[1] : operation.target.substring(0, 100);\n  }\n\n  const searchResults = context.document.body.search(searchTerm, {\n    matchCase: false,\n    matchWholeWord: false\n  });\n  searchResults.load('items');\n  await context.sync();\n\n  if (searchResults.items.length === 0) {\n    console.warn(`Placeholder not found: ${searchTerm}`);\n    return;\n  }\n\n  let replacedCount = 0;\n  const commentText = buildCommentText('replacePlaceholder', operation.value, operation.metadata, operation.target);\n\n  if (isLongPlaceholder) {\n    for (const result of searchResults.items) {\n      try {\n        const paragraph = result.paragraphs.getFirst();\n        paragraph.load('text');\n        await context.sync();\n\n        const paragraphText = paragraph.text;\n        const placeholderIndex = paragraphText.indexOf(operation.target);\n\n        if (placeholderIndex !== -1) {\n          const newText = paragraphText.substring(0, placeholderIndex) +\n                         operation.value +\n                         paragraphText.substring(placeholderIndex + operation.target.length);\n\n          paragraph.clear();\n          const insertedRange = paragraph.insertText(newText, Word.InsertLocation.start);\n\n          // Add comment\n          try {\n            insertedRange.insertComment(commentText);\n          } catch (e) {\n            console.warn('Could not add comment:', e);\n          }\n\n          replacedCount++;\n          if (operation.replaceAll === false) break;\n        }\n      } catch (expandError) {\n        const insertedRange = result.insertText(operation.value, Word.InsertLocation.replace);\n\n        // Add comment\n        try {\n          insertedRange.insertComment(commentText);\n        } catch (e) {\n          console.warn('Could not add comment:', e);\n        }\n\n        replacedCount++;\n        if (operation.replaceAll === false) break;\n      }\n    }\n  } else {\n    if (operation.replaceAll !== false) {\n      for (const result of searchResults.items) {\n        const insertedRange = result.insertText(operation.value, Word.InsertLocation.replace);\n\n        // Add comment\n        try {\n          insertedRange.insertComment(commentText);\n        } catch (e) {\n          console.warn('Could not add comment:', e);\n        }\n\n        replacedCount++;\n      }\n    } else {\n      const insertedRange = searchResults.items[0].insertText(operation.value, Word.InsertLocation.replace);\n\n      // Add comment\n      try {\n        insertedRange.insertComment(commentText);\n      } catch (e) {\n        console.warn('Could not add comment:', e);\n      }\n\n      replacedCount = 1;\n    }\n  }\n\n  console.log(`Replaced ${replacedCount} occurrences`);\n}\n\n/**\n * Execute replaceText operation\n */\nasync function executeReplaceText(\n  context: Word.RequestContext,\n  operation: Extract<DocumentOperation, { type: 'replaceText' }>\n): Promise<void> {\n  const searchResults = context.document.body.search(operation.target, {\n    matchCase: operation.matchCase || false,\n    matchWholeWord: operation.matchWholeWord || false\n  });\n  searchResults.load('items');\n  await context.sync();\n\n  if (searchResults.items.length === 0) {\n    console.warn(`Text not found: ${operation.target}`);\n    return;\n  }\n\n  const commentText = buildCommentText('replaceText', operation.value, operation.metadata, operation.target);\n\n  for (const result of searchResults.items) {\n    const insertedRange = result.insertText(operation.value, Word.InsertLocation.replace);\n\n    // Add comment\n    try {\n      insertedRange.insertComment(commentText);\n    } catch (e) {\n      console.warn('Could not add comment:', e);\n    }\n  }\n}\n\n/**\n * Execute deleteText operation\n */\nasync function executeDeleteText(\n  context: Word.RequestContext,\n  operation: Extract<DocumentOperation, { type: 'deleteText' }>\n): Promise<void> {\n  const searchResults = context.document.body.search(operation.target, {\n    matchCase: false,\n    matchWholeWord: false\n  });\n  searchResults.load('items');\n  await context.sync();\n\n  if (searchResults.items.length === 0) {\n    console.warn(`Text not found: ${operation.target}`);\n    return;\n  }\n\n  for (const result of searchResults.items) {\n    result.delete();\n  }\n}\n\n/**\n * Build comment text with metadata\n */\nfunction buildCommentText(\n  operationType: string,\n  insertedValue: string,\n  metadata?: { confidence?: string; source?: string; reasoning?: string },\n  originalTarget?: string\n): string {\n  const lines: string[] = [];\n\n  // Header\n  lines.push(`🤖 Kenneth AI - ${operationType}`);\n  lines.push('');\n\n  // Show what was replaced if available\n  if (originalTarget) {\n    const displayTarget = originalTarget.length > 100\n      ? originalTarget.substring(0, 100) + '...'\n      : originalTarget;\n    lines.push(`Replaced: \"${displayTarget}\"`);\n    lines.push('');\n  }\n\n  // Show inserted value\n  const displayValue = insertedValue.length > 150\n    ? insertedValue.substring(0, 150) + '...'\n    : insertedValue;\n  lines.push(`New value: \"${displayValue}\"`);\n  lines.push('');\n\n  // Metadata section\n  if (metadata) {\n    lines.push('--- Metadata ---');\n\n    if (metadata.confidence) {\n      const confidenceEmoji = metadata.confidence === 'high' ? '✅' : metadata.confidence === 'medium' ? '⚠️' : '❓';\n      lines.push(`${confidenceEmoji} Confidence: ${metadata.confidence}`);\n    }\n\n    if (metadata.source) {\n      lines.push(`📁 Source: ${metadata.source}`);\n    }\n\n    if (metadata.reasoning) {\n      lines.push(`💭 Reasoning: ${metadata.reasoning}`);\n    }\n\n    lines.push('');\n  }\n\n  // Footer\n  lines.push('---');\n  lines.push('Author: Kenneth AI (Demo Mode)');\n  lines.push('💡 Using mock data from mockLLMResponse.ts');\n\n  return lines.join('\\n');\n}\n\n/**\n * Build consolidated comment text for table operations\n */\nfunction buildTableCommentText(\n  tableIndex: number,\n  modifiedCells: Array<{ row: number; cell: number; value: string }>,\n  metadata?: { confidence?: string; source?: string; reasoning?: string }\n): string {\n  const lines: string[] = [];\n\n  // Header\n  lines.push(`🤖 Kenneth AI - fillTableCell`);\n  lines.push('');\n  lines.push(`Updated ${modifiedCells.length} cells in table ${tableIndex}`);\n  lines.push('');\n\n  // Show a sample of the changes (first few cells)\n  const sampleSize = Math.min(3, modifiedCells.length);\n  for (let i = 0; i < sampleSize; i++) {\n    const cell = modifiedCells[i];\n    const displayValue = cell.value.length > 50\n      ? cell.value.substring(0, 50) + '...'\n      : cell.value;\n    lines.push(`  Row ${cell.row}, Cell ${cell.cell}: \"${displayValue}\"`);\n  }\n\n  if (modifiedCells.length > sampleSize) {\n    lines.push(`  ... and ${modifiedCells.length - sampleSize} more cells`);\n  }\n\n  lines.push('');\n\n  // Metadata section\n  if (metadata) {\n    lines.push('--- Metadata ---');\n\n    if (metadata.confidence) {\n      const confidenceEmoji = metadata.confidence === 'high' ? '✅' : metadata.confidence === 'medium' ? '⚠️' : '❓';\n      lines.push(`${confidenceEmoji} Confidence: ${metadata.confidence}`);\n    }\n\n    if (metadata.source) {\n      lines.push(`📁 Source: ${metadata.source}`);\n    }\n\n    if (metadata.reasoning) {\n      lines.push(`💭 Reasoning: ${metadata.reasoning}`);\n    }\n\n    lines.push('');\n  }\n\n  // Footer\n  lines.push('---');\n  lines.push('Author: Kenneth AI (Demo Mode)');\n  lines.push('💡 Using mock data from mockLLMResponse.ts');\n\n  return lines.join('\\n');\n}\n","/**\n * Drafting Tab - AI Document Rewrite and Testing\n */\n\nimport { handleStructuredAIRewrite } from './ai-rewrite-structured';\n\n/**\n * Initialize the Drafting tab\n */\nexport function initializeDraftingTab() {\n  const aiRewriteBtn = document.getElementById('ai-rewrite-btn');\n  const testPingBtn = document.getElementById('test-ping-btn');\n\n  if (aiRewriteBtn) aiRewriteBtn.onclick = handleStructuredAIRewrite;\n  if (testPingBtn) testPingBtn.onclick = handleTestPing;\n}\n\n/**\n * Test backend connection (kept for debugging purposes)\n */\nasync function handleTestPing() {\n  const resultElement = document.getElementById(\"test-result\");\n  const button = document.getElementById(\"test-ping-btn\") as HTMLButtonElement;\n\n  if (!resultElement || !button) return;\n\n  button.disabled = true;\n  resultElement.textContent = \"Running comprehensive diagnostics...\\n\\n\";\n\n  // Test 1: Basic fetch capability\n  resultElement.textContent += \"TEST 1: Basic fetch capability\\n\";\n  try {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/todos/1\");\n    const data = await response.json();\n    resultElement.textContent += `✅ Fetch works! Got external data: ${data.title}\\n\\n`;\n  } catch (error) {\n    resultElement.textContent += `❌ Fetch completely blocked: ${error instanceof Error ? error.message : 'Unknown'}\\n`;\n    button.disabled = false;\n    return;\n  }\n\n  // Test 2: Environment info\n  resultElement.textContent += `\\n\\nTEST 2: Environment info\\n`;\n  resultElement.textContent += `Current origin: ${window.location.origin}\\n`;\n  resultElement.textContent += `Current URL: ${window.location.href}\\n`;\n  resultElement.textContent += `Protocol: ${window.location.protocol}\\n`;\n\n  button.disabled = false;\n}\n\n/**\n * Get Drafting tab HTML\n */\nexport function getDraftingTabHTML(): string {\n  return `\n    <div id=\"drafting-tab\" class=\"tab-content active\" style=\"display: flex; flex: 1; background: white; padding: 20px; overflow: auto; flex-direction: column; align-items: center; justify-content: flex-start;\">\n      <!-- DEBUG: Test Backend Connection -->\n\n      <!-- AI Rewrite Section -->\n      <div style=\"width: 100%; max-width: 500px; margin-bottom: 30px;\">\n        <h3 style=\"margin-bottom: 12px; color: #333;\">🤖 AI Document Rewrite (Demo Mode)</h3>\n        <p style=\"font-size: 14px; color: #666; margin-bottom: 8px;\">\n          Fill placeholders and tables using mock AI operations (no backend required)\n        </p>\n        <p style=\"font-size: 12px; color: #999; margin-bottom: 16px; padding: 8px; background: #f9f9f9; border-radius: 4px; border-left: 3px solid #667eea;\">\n          💡 This demo uses hardcoded data from <code>mockLLMResponse.ts</code>\n        </p>\n        <button id=\"ai-rewrite-btn\" style=\"width: 100%; padding: 14px 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border: none; border-radius: 8px; font-size: 16px; font-weight: 600; cursor: pointer;\">\n          ✨ AI Rewrite Document (Demo)\n        </button>\n        <div id=\"rewrite-status\" style=\"margin-top: 12px; text-align: center; color: #666; font-size: 14px;\"></div>\n\n        <!-- Progress Bar -->\n        <div id=\"progress-container\" style=\"display: none; margin-top: 16px;\">\n          <div id=\"progress-text\" style=\"font-size: 13px; color: #666; margin-bottom: 8px;\">Processing...</div>\n          <div style=\"width: 100%; height: 8px; background: #f0f0f0; border-radius: 4px; overflow: hidden;\">\n            <div id=\"progress-bar\" style=\"width: 0%; height: 100%; background: linear-gradient(90deg, #667eea 0%, #764ba2 100%); transition: width 0.3s ease;\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n","/**\n * AI Chat Tab - AI conversation interface with external chat widget\n *\n * IMPORTANT: The chat server at localhost:3001 must be configured with:\n *\n * 1. HTTPS enabled (not HTTP) - Office Add-ins require HTTPS\n *\n * 2. Remove or set X-Frame-Options header:\n *    - Do NOT use: X-Frame-Options: DENY or SAMEORIGIN\n *    - Best: Don't send X-Frame-Options header at all\n *\n * 3. Set Content-Security-Policy with frame-ancestors:\n *    Content-Security-Policy: frame-ancestors 'self' https://localhost:* https://*.office.com https://*.officeapps.live.com ms-office:;\n *\n * 4. If using cookies/auth, set:\n *    - Cookies: SameSite=None; Secure\n *    - CORS: Access-Control-Allow-Credentials: true\n *    - CORS: Access-Control-Allow-Origin: https://localhost:3000 (or appropriate origin)\n *\n * 5. Ensure the chat server runs on https://localhost:3001 (with dev cert)\n */\n\n/**\n * Initialize the AI Chat tab\n */\nexport function initializeAIChatTab() {\n  console.log('[AI Chat] Tab initialized');\n\n  // Setup iframe communication if needed\n  window.addEventListener('message', handleChatMessage);\n\n  // Test connectivity to chat server\n  setTimeout(async () => {\n    const statusDiv = document.getElementById('iframe-status');\n    const iframe = document.getElementById('chat-widget-iframe') as HTMLIFrameElement;\n\n    if (!statusDiv) return;\n\n    // Test 1: Can we reach the chat server at all?\n    try {\n      statusDiv.innerHTML = '🔍 <strong>Testing connection...</strong><br/><span style=\"font-size: 11px;\">Attempting to reach https://localhost:3001</span>';\n\n      const response = await fetch('https://localhost:3001/chat/cmfivedyx0001c96zlzkskb7b', {\n        method: 'HEAD',\n        mode: 'no-cors'\n      });\n\n      statusDiv.innerHTML = '📡 <strong>Server reachable!</strong><br/><span style=\"font-size: 11px;\">Attempting to load in iframe...</span>';\n      statusDiv.style.background = '#d1ecf1';\n\n      // Monitor iframe loading\n      let iframeLoaded = false;\n\n      if (iframe) {\n        iframe.onload = () => {\n          iframeLoaded = true;\n          statusDiv.innerHTML = '✅ <strong>Iframe loaded!</strong><br/><span style=\"font-size: 11px;\">If you see blank content, check that the chat server is rendering HTML.</span>';\n          statusDiv.style.background = '#d4edda';\n          statusDiv.style.color = '#155724';\n        };\n\n        iframe.onerror = () => {\n          statusDiv.innerHTML = '❌ <strong>Iframe blocked by browser.</strong><br/><span style=\"font-size: 11px;\">Likely: Certificate not trusted or X-Frame-Options blocking.</span>';\n          statusDiv.style.background = '#f8d7da';\n          statusDiv.style.color = '#721c24';\n        };\n\n        // Check after 5 seconds if still not loaded\n        setTimeout(() => {\n          if (!iframeLoaded) {\n            statusDiv.innerHTML = `\n              ⚠️ <strong>Iframe not loading - Certificate Issue</strong><br/>\n              <span style=\"font-size: 11px;\">Desktop Word doesn't trust the HTTPS certificate.</span><br/>\n              <span style=\"font-size: 10px; color: #856404;\">\n                <strong>FIX:</strong> Open <a href=\"https://localhost:3001/chat/cmfivedyx0001c96zlzkskb7b\" target=\"_blank\" style=\"color: #0066cc;\">this link</a> in your browser first, accept the certificate warning, then restart the add-in.\n              </span>\n            `;\n            statusDiv.style.background = '#fff3cd';\n            statusDiv.style.color = '#856404';\n          }\n        }, 5000);\n      }\n\n    } catch (fetchError) {\n      statusDiv.innerHTML = `\n        ❌ <strong>Cannot reach chat server</strong><br/>\n        <span style=\"font-size: 11px; color: #721c24;\">Server not running or HTTPS certificate issue.</span><br/>\n        <span style=\"font-size: 10px;\">Error: ${fetchError instanceof Error ? fetchError.message : 'Unknown'}</span><br/>\n        <span style=\"font-size: 10px; margin-top: 8px; display: block;\">\n          <strong>Steps to fix:</strong><br/>\n          1. Ensure chat server runs on https://localhost:3001<br/>\n          2. Open the URL in browser and accept certificate<br/>\n          3. Restart the add-in\n        </span>\n      `;\n      statusDiv.style.background = '#f8d7da';\n      statusDiv.style.color = '#721c24';\n    }\n  }, 500);\n}\n\n/**\n * Handle messages from the chat widget iframe\n */\nfunction handleChatMessage(event: MessageEvent) {\n  // Only accept messages from the chat server (HTTPS)\n  if (event.origin !== 'https://localhost:3001') {\n    return;\n  }\n\n  console.log('[AI Chat] Message from chat widget:', event.data);\n\n  // Handle different message types from the chat widget\n  // Add custom message handling here as needed\n}\n\n/**\n * Get AI Chat tab HTML with embedded chat widget\n */\nexport function getAIChatTabHTML(): string {\n  // Use same-origin proxy to avoid certificate issues\n  // The add-in dev server proxies /chat/* to https://localhost:3001\n  const chatUrl = '/chat/cmfivedyx0001c96zlzkskb7b';\n\n  return `\n    <div id=\"ai-chat-tab\" class=\"tab-content\" style=\"display: none; flex: 1; background: white; padding: 0; flex-direction: column;\">\n      <div id=\"iframe-status\" style=\"padding: 12px; background: #e3f2fd; font-size: 12px; border-bottom: 1px solid #90caf9; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\">\n        🔄 <strong>Loading chat widget...</strong><br/>\n        <span style=\"font-size: 11px; color: #666;\">URL: ${chatUrl}</span><br/>\n        <span style=\"font-size: 10px; color: #999;\">Waiting for response from server...</span>\n      </div>\n      <iframe\n        id=\"chat-widget-iframe\"\n        src=\"${chatUrl}\"\n        style=\"width: 100%; height: 100%; border: none; flex: 1; background: white;\"\n        allow=\"clipboard-write\"\n        sandbox=\"allow-scripts allow-forms allow-popups allow-same-origin allow-downloads allow-popups-to-escape-sandbox\"\n      ></iframe>\n      <div style=\"padding: 8px; background: #f5f5f5; font-size: 10px; color: #666; border-top: 1px solid #ddd; text-align: center;\">\n        If blank after 5 seconds, check: HTTPS enabled, CSP frame-ancestors set, no X-Frame-Options header\n      </div>\n    </div>\n  `;\n}\n","/**\n * Mock Checklist Data for Creditors' Voluntary Liquidation - Checklist 3\n *\n * This file contains hardcoded checklist operations that simulate\n * auto-reviewing a CVL checklist and filling in the \"Initials & Date\" column\n * with user initials and adding comments with status, commentary, and references.\n */\n\nimport type { FillChecklistCellOperation } from './types';\n\nexport const MOCK_CHECKLIST_OPERATIONS: FillChecklistCellOperation[] = [\n  {\n    type: \"fillChecklistCell\",\n    tableIndex: 0,\n    row: 1, // Task 1: Before proceeding with General Meeting\n    cell: 4, // 5th column: \"Initials & Date\"\n    value: \"MA\\n16/10/2025\",\n    checklistMetadata: {\n      status: \"✅ Completed\",\n      commentary: \"Based on review of company filings (CVL102.pdf), notice was sent on 06 September 2025 to all qualifying floating charge holders. The required 5 business day period has elapsed as of 13 September 2025.\",\n      references: [\n        \"CVL102.pdf (QFCH Notice dated 06/09/2025)\",\n        \"Case Timeline Document\",\n        \"Companies House filing dated 06/09/2025\"\n      ]\n    }\n  },\n  {\n    type: \"fillChecklistCell\",\n    tableIndex: 0,\n    row: 2, // Task 2: Identify restrictions notices\n    cell: 4,\n    value: \"MA\\n16/10/2025\",\n    checklistMetadata: {\n      status: \"✅ Completed\",\n      commentary: \"Conducted comprehensive review of shareholder register and Companies House filings. No restriction notices found. Both shareholders (Rakesh Kotecha and Mahesh Kotecha) hold 50% each and have confirmed ability to exercise voting rights without restrictions.\",\n      references: [\n        \"Shareholder Register (current)\",\n        \"Companies House PSC Register\",\n        \"Director confirmation emails dated 10/09/2025\"\n      ]\n    }\n  },\n  {\n    type: \"fillChecklistCell\",\n    tableIndex: 0,\n    row: 3, // Task 3: Decision date for creditors nomination\n    cell: 4,\n    value: \"MA\\n16/10/2025\",\n    checklistMetadata: {\n      status: \"✅ Completed\",\n      commentary: \"Members' resolution to wind up passed on 13 September 2025 at 10:00 AM. Creditors' decision date scheduled for 27 September 2025 (14 days after members' resolution), which complies with the statutory requirement.\",\n      references: [\n        \"Members' Resolution dated 13/09/2025\",\n        \"Creditors' Decision Notice dated 13/09/2025\",\n        \"s84(2A) Insolvency Act 1986\"\n      ]\n    }\n  },\n  {\n    type: \"fillChecklistCell\",\n    tableIndex: 0,\n    row: 4, // Task 4: Ensure SoA is verified and delivered\n    cell: 4,\n    value: \"MA\\n16/10/2025\",\n    checklistMetadata: {\n      status: \"✅ Completed\",\n      commentary: \"Statement of Affairs verified by director Rakesh Kotecha on 12 September 2025 with statement of truth. SoA made up to date of 05 September 2025 (8 days before winding-up resolution). Copy delivered to creditors on 26 September 2025, one business day before creditors' decision date of 27 September 2025. All timing requirements under R6.14(7) and s99 satisfied.\",\n      references: [\n        \"Verified SoA dated 05/09/2025\",\n        \"Director's Statement of Truth (R. Kotecha) dated 12/09/2025\",\n        \"Creditor distribution records dated 26/09/2025\",\n        \"R6.14(7) and s99 Insolvency Act 1986\"\n      ]\n    }\n  },\n  {\n    type: \"fillChecklistCell\",\n    tableIndex: 0,\n    row: 5, // Task 5: Convene directors' meeting\n    cell: 4,\n    value: \"MA\\n16/10/2025\",\n    checklistMetadata: {\n      status: \"✅ Completed\",\n      commentary: \"Directors' meeting held on 11 September 2025 to review and approve draft SoA and deficiency account. SoA verified by Rakesh Kotecha (statement of truth). Mahesh Kotecha, Pragna Kotecha, and Trushali Kotecha submitted statements of concurrence. Directors were advised of penalties for false statements per s235 Insolvency Act 1986. Minutes signed by chairman R. Kotecha. All schedules prepared including employee claims schedule (3 employees, total £45,200) and consumer creditors schedule (none identified). HMRC secondary preferential status correctly reflected for VAT and PAYE owed since December 2020.\",\n      references: [\n        \"Directors' Meeting Minutes dated 11/09/2025\",\n        \"CVL301-F (Statement of Affairs)\",\n        \"Employee Claims Schedule (3 employees)\",\n        \"Director Statements of Concurrence (M. Kotecha, P. Kotecha, T. Kotecha)\",\n        \"s235 Insolvency Act 1986\",\n        \"Insolvency Act 1986 (HMRC Debts: Priority on Insolvency) Regulations 2020\"\n      ]\n    }\n  },\n  {\n    type: \"fillChecklistCell\",\n    tableIndex: 0,\n    row: 6, // Task 6: Limited disclosure if applicable\n    cell: 4,\n    value: \"N/A\",\n    checklistMetadata: {\n      status: \"⚠️ Not Required\",\n      commentary: \"No application to court for limited disclosure has been made. The liquidator has determined that full disclosure of the Statement of Affairs does not prejudice the conduct of the liquidation and is not reasonably expected to lead to violence against any person. Standard full disclosure procedures apply.\",\n      references: [\n        \"Liquidator's disclosure assessment dated 12/09/2025\",\n        \"R6.6 Insolvency Rules 2016\"\n      ]\n    }\n  }\n];\n","/**\n * Checklist Tab - Auto-review CVL Checklists\n */\n\n/* global Word */\n\nimport { MOCK_CHECKLIST_OPERATIONS } from './mockChecklistData';\nimport type { FillChecklistCellOperation } from './types';\n\n/**\n * Initialize the Checklist tab\n */\nexport function initializeChecklistTab() {\n  const autoReviewBtn = document.getElementById('auto-review-checklist-btn');\n\n  if (autoReviewBtn) autoReviewBtn.onclick = handleAutoReviewChecklist;\n}\n\n/**\n * Auto-review checklist and populate the \"Initials & Date\" column\n */\nasync function handleAutoReviewChecklist() {\n  const statusElement = document.getElementById('checklist-status');\n  const button = document.getElementById('auto-review-checklist-btn') as HTMLButtonElement;\n  const progressContainer = document.getElementById('checklist-progress-container');\n  const progressBar = document.getElementById('checklist-progress-bar');\n  const progressText = document.getElementById('checklist-progress-text');\n\n  if (!statusElement || !button) {\n    alert('Required UI elements not found');\n    return;\n  }\n\n  // Create live debug log\n  let debugLog: string[] = [];\n  const addLog = (message: string, isError = false) => {\n    const timestamp = new Date().toLocaleTimeString();\n    const logLine = `${timestamp} ${message}`;\n    debugLog.push(logLine);\n    console.log(logLine);\n\n    // Update UI immediately\n    const color = isError ? '#d32f2f' : '#666';\n    statusElement.innerHTML = `\n      <div style=\"padding: 12px; background: ${isError ? '#ffebee' : '#f5f5f5'}; border-radius: 4px; border: 1px solid ${isError ? '#ef5350' : '#ddd'};\">\n        <div style=\"margin-bottom: 8px; font-weight: bold; color: ${color};\">${message}</div>\n        <div style=\"max-height: 200px; overflow-y: auto; font-size: 11px; font-family: monospace; background: white; padding: 8px; border-radius: 4px;\">\n          ${debugLog.map(line => `<div style=\"margin: 2px 0;\">${line}</div>`).join('')}\n        </div>\n      </div>\n    `;\n  };\n\n  try {\n    button.disabled = true;\n    if (progressContainer) progressContainer.style.display = 'block';\n\n    addLog('🔍 Starting checklist auto-review...');\n    if (progressText) progressText.textContent = 'Analyzing checklist table...';\n    if (progressBar) progressBar.style.width = '10%';\n\n    // Load mock operations\n    addLog(`📦 Loading ${MOCK_CHECKLIST_OPERATIONS.length} checklist review operations...`);\n    if (progressBar) progressBar.style.width = '25%';\n\n    // Execute operations\n    addLog('✍️ Populating checklist with review data...');\n    if (progressText) progressText.textContent = 'Filling checklist cells...';\n    if (progressBar) progressBar.style.width = '50%';\n\n    await executeChecklistOperations(MOCK_CHECKLIST_OPERATIONS, (progress) => {\n      if (progressBar) {\n        progressBar.style.width = `${50 + (progress * 40)}%`;\n      }\n      addLog(`  ✓ Completed operation ${Math.floor(progress * MOCK_CHECKLIST_OPERATIONS.length)}/${MOCK_CHECKLIST_OPERATIONS.length}`);\n    });\n\n    if (progressBar) progressBar.style.width = '100%';\n    addLog(`✅ Successfully populated ${MOCK_CHECKLIST_OPERATIONS.length} checklist items!`);\n\n    // Success message\n    statusElement.innerHTML = `\n      <div style=\"padding: 12px; background: #e8f5e9; border: 2px solid #4caf50; border-radius: 4px;\">\n        <div style=\"color: #2e7d32; font-weight: bold; margin-bottom: 8px;\">✅ Checklist auto-review complete!</div>\n        <div style=\"font-size: 13px; color: #1b5e20; margin-bottom: 8px;\">\n          Populated ${MOCK_CHECKLIST_OPERATIONS.length} items with initials and review comments\n        </div>\n        <div style=\"max-height: 200px; overflow-y: auto; font-size: 11px; font-family: monospace; background: white; padding: 8px; border-radius: 4px;\">\n          ${debugLog.map(line => `<div style=\"margin: 2px 0;\">${line}</div>`).join('')}\n        </div>\n      </div>\n    `;\n    if (progressText) progressText.textContent = 'Complete!';\n\n    setTimeout(() => {\n      if (progressContainer) progressContainer.style.display = 'none';\n    }, 3000);\n\n  } catch (error) {\n    console.error('[FATAL ERROR]', error);\n\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    const errorStack = error instanceof Error ? error.stack : '';\n\n    statusElement.innerHTML = `\n      <div style=\"padding: 12px; background: #ffebee; border: 2px solid #d32f2f; border-radius: 4px;\">\n        <div style=\"color: #d32f2f; font-weight: bold; margin-bottom: 8px; font-size: 16px;\">❌ AUTO-REVIEW FAILED</div>\n        <div style=\"margin-bottom: 12px; color: #333; font-size: 14px;\">${errorMessage}</div>\n        <div style=\"margin-bottom: 12px; max-height: 200px; overflow-y: auto; font-size: 11px; font-family: monospace; background: white; padding: 8px; border-radius: 4px;\">\n          ${debugLog.map(line => `<div style=\"margin: 2px 0;\">${line}</div>`).join('')}\n        </div>\n        <details style=\"margin-top: 8px;\">\n          <summary style=\"cursor: pointer; color: #d32f2f; font-size: 12px;\">Show stack trace</summary>\n          <pre style=\"font-size: 10px; margin-top: 4px; background: #f5f5f5; padding: 8px; border-radius: 4px; overflow-x: auto; white-space: pre-wrap;\">${errorStack || 'No stack trace available'}</pre>\n        </details>\n      </div>\n    `;\n\n    if (progressText) {\n      progressText.textContent = 'FAILED';\n      progressText.style.color = '#d32f2f';\n    }\n\n    if (progressBar) {\n      (progressBar as HTMLElement).style.background = '#d32f2f';\n    }\n  } finally {\n    button.disabled = false;\n  }\n}\n\n/**\n * Execute checklist operations on Word document\n */\nasync function executeChecklistOperations(\n  operations: FillChecklistCellOperation[],\n  onProgress?: (progress: number) => void\n): Promise<void> {\n  return Word.run(async (context) => {\n    console.log('[Checklist] Starting execution, count:', operations.length);\n\n    // Enable track changes\n    context.document.changeTrackingMode = Word.ChangeTrackingMode.trackAll;\n\n    try {\n      context.document.properties.author = \"Kenneth AI\";\n      context.document.properties.load('author');\n    } catch (e) {\n      console.warn(\"Could not set author:\", e);\n    }\n\n    await context.sync();\n\n    let successCount = 0;\n    let failureCount = 0;\n\n    for (let i = 0; i < operations.length; i++) {\n      const operation = operations[i];\n      console.log(`[Operation ${i + 1}/${operations.length}] Filling checklist cell at row ${operation.row}`);\n\n      try {\n        await executeFillChecklistCell(context, operation);\n        await context.sync();\n        successCount++;\n\n        if (onProgress) {\n          onProgress((i + 1) / operations.length);\n        }\n      } catch (error) {\n        failureCount++;\n        console.error(`Operation ${i} failed:`, error);\n      }\n    }\n\n    console.log('[Checklist] Complete:', { total: operations.length, success: successCount, failed: failureCount });\n  });\n}\n\n/**\n * Execute fillChecklistCell operation\n */\nasync function executeFillChecklistCell(\n  context: Word.RequestContext,\n  operation: FillChecklistCellOperation\n): Promise<void> {\n  const tables = context.document.body.tables;\n  tables.load('items');\n  await context.sync();\n\n  if (operation.tableIndex >= tables.items.length) {\n    console.warn(`Table ${operation.tableIndex} not found`);\n    return;\n  }\n\n  const table = tables.items[operation.tableIndex];\n  const rows = table.rows;\n  rows.load('items');\n  await context.sync();\n\n  if (operation.row >= rows.items.length) {\n    console.warn(`Row ${operation.row} not found`);\n    return;\n  }\n\n  const row = rows.items[operation.row];\n  const cells = row.cells;\n  cells.load('items');\n  await context.sync();\n\n  if (operation.cell >= cells.items.length) {\n    console.warn(`Cell ${operation.cell} not found`);\n    return;\n  }\n\n  const cell = cells.items[operation.cell];\n  cell.body.clear();\n  const insertedRange = cell.body.insertText(operation.value, Word.InsertLocation.start);\n\n  // Add comment with checklist metadata\n  try {\n    const commentText = buildChecklistCommentText(operation);\n    // Insert comment on the text range, not the cell body\n    insertedRange.insertComment(commentText);\n    console.log('Comment added successfully to cell:', operation.row, operation.cell);\n  } catch (e) {\n    console.warn('Could not add comment to checklist cell:', e);\n  }\n}\n\n/**\n * Build comment text with checklist metadata\n */\nfunction buildChecklistCommentText(operation: FillChecklistCellOperation): string {\n  const lines: string[] = [];\n  const metadata = operation.checklistMetadata;\n\n  // Status\n  lines.push(`Status: ${metadata.status}`);\n  lines.push('');\n\n  // Commentary\n  lines.push('Commentary:');\n  lines.push(metadata.commentary);\n  lines.push('');\n\n  // References\n  if (metadata.references && metadata.references.length > 0) {\n    lines.push('References:');\n    metadata.references.forEach(ref => {\n      lines.push(`  • ${ref}`);\n    });\n    lines.push('');\n  }\n\n  // Footer\n  lines.push('---');\n  lines.push('Generated by Kenneth AI (Demo Mode)');\n\n  return lines.join('\\n');\n}\n\n/**\n * Get Checklist tab HTML\n */\nexport function getChecklistTabHTML(): string {\n  return `\n    <div id=\"checklist-tab\" class=\"tab-content\" style=\"display: none; flex: 1; background: white; padding: 20px; overflow: auto; flex-direction: column;\">\n      <div style=\"max-width: 600px; width: 100%; margin: 0 auto;\">\n        <h3 style=\"margin-bottom: 8px; color: #333;\">✅ Checklist Auto-Review</h3>\n        <p style=\"font-size: 14px; color: #666; margin-bottom: 20px;\">\n          Automatically populate the checklist \"Initials & Date\" column with review data\n        </p>\n\n        <!-- Instructions -->\n        <div style=\"margin-bottom: 20px; padding: 12px; background: #f0f7ff; border-left: 3px solid #2196F3; border-radius: 4px;\">\n          <div style=\"font-weight: 600; color: #1976D2; margin-bottom: 4px;\">📋 How it works:</div>\n          <div style=\"font-size: 13px; color: #424242; line-height: 1.6;\">\n            1. Ensure your document contains a checklist table<br>\n            2. Click \"Auto-review Checklist\" below<br>\n            3. The add-in will populate the \"Initials & Date\" column<br>\n            4. Each cell will have a comment with status, commentary, and references\n          </div>\n        </div>\n\n        <!-- Action Button -->\n        <div style=\"margin-bottom: 20px;\">\n          <button id=\"auto-review-checklist-btn\" style=\"width: 100%; padding: 14px 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border: none; border-radius: 8px; font-size: 16px; font-weight: 600; cursor: pointer;\">\n            🔍 Auto-review Checklist\n          </button>\n        </div>\n\n        <!-- Progress Bar -->\n        <div id=\"checklist-progress-container\" style=\"display: none; margin-bottom: 16px;\">\n          <div id=\"checklist-progress-text\" style=\"font-size: 13px; color: #666; margin-bottom: 8px;\">Processing...</div>\n          <div style=\"width: 100%; height: 8px; background: #f0f0f0; border-radius: 4px; overflow: hidden;\">\n            <div id=\"checklist-progress-bar\" style=\"width: 0%; height: 100%; background: linear-gradient(90deg, #667eea 0%, #764ba2 100%); transition: width 0.3s ease;\"></div>\n          </div>\n        </div>\n\n        <!-- Status Display -->\n        <div id=\"checklist-status\">\n          <!-- Populated by JavaScript -->\n        </div>\n      </div>\n    </div>\n  `;\n}\n","/**\n * Word-specific functionality\n * Main module for Word add-in - MODULAR VERSION\n */\n\n/* global document */\n\nimport { initializeDraftingTab, getDraftingTabHTML } from './drafting-tab';\nimport { initializeAIChatTab, getAIChatTabHTML } from './ai-chat-tab';\nimport { initializeChecklistTab, getChecklistTabHTML } from './checklist-tab';\n\n/**\n * Initialize Word add-in\n */\nexport function initialize() {\n  console.log('[Word] Initializing Word add-in...');\n\n  // Inject HTML into the app container\n  const appContainer = document.getElementById('app-container');\n  if (appContainer) {\n    appContainer.innerHTML = getWordHTML();\n    console.log('[Word] HTML injected successfully');\n  } else {\n    console.error('[Word] app-container not found!');\n    return;\n  }\n\n  // Setup tab switching\n  setupTabs();\n\n  // Initialize each tab module\n  initializeDraftingTab();\n  initializeAIChatTab();\n  initializeChecklistTab();\n\n  console.log('[Word] All tabs initialized');\n}\n\n/**\n * Setup tab switching\n */\nfunction setupTabs() {\n  const tabButtons = document.querySelectorAll('.tab-button');\n  const tabContents = document.querySelectorAll('.tab-content');\n\n  tabButtons.forEach(button => {\n    button.addEventListener('click', () => {\n      const targetTab = button.getAttribute('data-tab');\n\n      // Remove active class from all\n      tabButtons.forEach(btn => {\n        btn.classList.remove('active');\n        (btn as HTMLElement).style.background = '#1e1e1e';\n        (btn as HTMLElement).style.color = '#999';\n      });\n      tabContents.forEach(content => {\n        content.classList.remove('active');\n        (content as HTMLElement).style.display = 'none';\n      });\n\n      // Activate selected\n      button.classList.add('active');\n      (button as HTMLElement).style.background = '#2d2d2d';\n      (button as HTMLElement).style.color = 'white';\n\n      const targetContent = document.getElementById(`${targetTab}-tab`);\n      if (targetContent) {\n        targetContent.classList.add('active');\n        targetContent.style.display = 'flex';\n      }\n    });\n  });\n}\n\n/**\n * Get Word HTML template with all tabs\n */\nfunction getWordHTML(): string {\n  return `\n    <div style=\"width: 100%; height: 100vh; display: flex; flex-direction: column; background: white; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\">\n      <!-- Tab Navigation -->\n      <div style=\"display: flex; background: #1e1e1e; border-bottom: 1px solid #666;\">\n        <button class=\"tab-button active\" data-tab=\"drafting\" style=\"flex: 1; padding: 12px; background: #2d2d2d; color: white; border: none; cursor: pointer; font-weight: 600;\">Drafting</button>\n        <button class=\"tab-button\" data-tab=\"checklist\" style=\"flex: 1; padding: 12px; background: #1e1e1e; color: #999; border: none; cursor: pointer; font-weight: 600;\">Checklist</button>\n        <button class=\"tab-button\" data-tab=\"ai-chat\" style=\"flex: 1; padding: 12px; background: #1e1e1e; color: #999; border: none; cursor: pointer; font-weight: 600;\">AI Chat</button>\n      </div>\n\n      <!-- Tab Content Areas -->\n      ${getDraftingTabHTML()}\n      ${getChecklistTabHTML()}\n      ${getAIChatTabHTML()}\n    </div>\n  `;\n}\n"],"names":["MOCK_LLM_OPERATIONS","type","target","value","replaceAll","metadata","confidence","source","reasoning","matchCase","tableIndex","row","cell","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","handleStructuredAIRewrite","_handleStructuredAIRewrite","_callee","statusElement","progressContainer","progressBar","progressText","button","debugLog","addLog","structure","errMsg","operations","_errMsg","_errMsg2","errorMessage","errorStack","_t","_t2","_t3","_t4","_context","document","getElementById","alert","message","isError","undefined","timestamp","Date","toLocaleTimeString","logLine","concat","push","console","log","color","innerHTML","map","line","join","disabled","style","display","textContent","width","extractDocumentSimplified","text","placeholders","Error","String","getMockOperations","executeOperations","setTimeout","error","stack","background","_extractDocumentSimplified","_callee3","_context3","Word","run","_ref","_callee2","context","body","placeholderRegex","_context2","load","sync","Array","from","Set","match","tables","_x13","_x","_x2","_getMockOperations","_callee4","_context4","_x3","_executeOperations","_callee6","_context6","_ref2","_callee5","successCount","failureCount","tableOperationsMap","nonTableOperations","_iterator","_step","_operation","_tableOps","tableEntries","_i","_tableEntries","_tableEntries$_i","tableOps","operation","_t5","_t6","_t7","_context5","changeTrackingMode","ChangeTrackingMode","trackAll","properties","author","warn","Map","_createForOfIteratorHelper","s","get","set","err","entries","_slicedToArray","executeTableOperations","executeReplacePlaceholder","executeReplaceText","executeDeleteText","total","success","failed","_x14","_x4","_x5","_x6","_executeTableOperations","_callee7","table","rows","modifiedCells","_iterator2","_step2","cells","firstOp","firstRow","firstCells","firstCell","range","commentText","_t8","_t9","_context7","items","clear","insertText","InsertLocation","start","getRange","buildTableCommentText","insertComment","_x9","_x0","_executeReplacePlaceholder","_callee9","isLongPlaceholder","searchTerm","prefixMatch","searchResults","replacedCount","_iterator3","_step3","result","paragraph","paragraphText","placeholderIndex","newText","insertedRange","_insertedRange","_iterator4","_step4","_result","_insertedRange2","_insertedRange3","_t1","_context9","substring","search","matchWholeWord","buildCommentText","paragraphs","getFirst","indexOf","replace","_x1","_x10","_executeReplaceText","_callee0","_iterator5","_step5","_context0","_x11","_x12","_executeDeleteText","_callee1","_iterator6","_step6","_context1","delete","operationType","insertedValue","originalTarget","lines","displayTarget","displayValue","confidenceEmoji","sampleSize","Math","min","handleTestPing","_handleTestPing","resultElement","response","data","fetch","json","title","window","location","origin","href","protocol","handleChatMessage","event","MOCK_CHECKLIST_OPERATIONS","checklistMetadata","status","commentary","references","handleAutoReviewChecklist","_handleAutoReviewChecklist","executeChecklistOperations","progress","floor","_executeChecklistOperations","onProgress","executeFillChecklistCell","_executeFillChecklistCell","buildChecklistCommentText","forEach","ref","initialize","tabButtons","tabContents","aiRewriteBtn","testPingBtn","autoReviewBtn","appContainer","querySelectorAll","addEventListener","targetTab","getAttribute","btn","classList","remove","content","add","targetContent","onclick","statusDiv","iframe","iframeLoaded","method","mode","onload","onerror"],"sourceRoot":""}