{"version":3,"file":"word-main.js","mappings":";iMAUO,IAAMA,EAA2C,CACtD,CACEC,KAAM,qBACNC,OAAQ,mBACRC,MAAO,8BACPC,YAAY,EACZC,SAAU,CACRC,WAAY,OACZC,OAAQ,iBAGZ,CACEN,KAAM,cACNC,OAAQ,KACRC,MAAO,oBACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,cACNC,OAAQ,eACRC,MAAO,sCACPE,SAAU,CACRC,WAAY,MACZC,OAAQ,iBAGZ,CACEN,KAAM,qBACNC,OAAQ,iSACRC,MAAO,qIACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,uBAGZ,CACEN,KAAM,qBACNC,OAAQ,oBACRC,MAAO,aACPC,YAAY,EACZC,SAAU,CACRC,WAAY,OACZC,OAAQ,iBAGZ,CACEN,KAAM,qBACNC,OAAQ,uBACRC,MAAO,oBACPC,YAAY,EACZC,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,qBACNC,OAAQ,8BACRC,MAAO,oBACPC,YAAY,EACZC,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,qBACNC,OAAQ,kCACRC,MAAO,oBACPC,YAAY,EACZC,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,qBACNC,OAAQ,+BACRC,MAAO,gCACPC,YAAY,EACZC,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,qBACNC,OAAQ,+BACRC,MAAO,oEACPC,YAAY,EACZC,SAAU,CACRC,WAAY,SACZC,OAAQ,yCAGZ,CACEN,KAAM,qBACNC,OAAQ,yBACRC,MAAO,eACPC,YAAY,EACZC,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,qBACNC,OAAQ,yBACRC,MAAO,WACPC,YAAY,EACZC,SAAU,CACRC,WAAY,OACZC,OAAQ,iBAGZ,CACEN,KAAM,qBACNC,OAAQ,sBACRC,MAAO,wCACPC,YAAY,EACZC,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,qBACNC,OAAQ,+BACRC,MAAO,uBACPC,YAAY,EACZC,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,aACNC,OAAQ,iFACRG,SAAU,CACRC,WAAY,OACZE,UAAW,yCAGf,CACEP,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,eACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,mBACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,sCACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,kBACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,UACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,uEACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,qBACNC,OAAQ,+BACRC,MAAO,6DACPC,YAAY,EACZC,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,aACNC,OAAQ,kFACRG,SAAU,CACRC,WAAY,OACZE,UAAW,yCAGf,CACEP,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,kBACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,SACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,MACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,4BACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,SACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,MACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,aACNC,OAAQ,qEACRG,SAAU,CACRC,WAAY,OACZE,UAAW,yCAGf,CACEP,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,kBACPE,SAAU,CACRC,WAAY,OACZC,OAAQ,iBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,WACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,eACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,MACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,4BACPE,SAAU,CACRC,WAAY,OACZC,OAAQ,iBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,WACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,eACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,MACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,kBACPE,SAAU,CACRC,WAAY,OACZC,OAAQ,iBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,WACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,kBACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,MACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,oBACPE,SAAU,CACRC,WAAY,OACZC,OAAQ,iBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,WACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,kBACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,wBAGZ,CACEN,KAAM,gBACNQ,WAAY,EACZC,IAAK,EACLC,KAAM,EACNR,MAAO,MACPE,SAAU,CACRC,WAAY,SACZC,OAAQ,yB,kgCCted,IAAAK,EAAAC,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAAC,EAAAL,GAAAA,EAAAM,qBAAAC,EAAAP,EAAAO,EAAAC,EAAAC,OAAAC,OAAAL,EAAAC,WAAA,OAAAK,EAAAH,EAAA,mBAAAV,EAAAE,EAAAE,GAAA,IAAAE,EAAAC,EAAAG,EAAAI,EAAA,EAAAC,EAAAX,GAAA,GAAAY,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAb,EAAA,EAAAgB,EAAApB,EAAAqB,EAAAC,EAAAN,EAAAM,EAAAC,KAAAvB,EAAA,GAAAsB,EAAA,SAAArB,EAAAC,GAAA,OAAAM,EAAAP,EAAAQ,EAAA,EAAAG,EAAAZ,EAAAmB,EAAAf,EAAAF,EAAAmB,CAAA,YAAAC,EAAApB,EAAAE,GAAA,IAAAK,EAAAP,EAAAU,EAAAR,EAAAH,EAAA,GAAAiB,GAAAF,IAAAV,GAAAL,EAAAgB,EAAAO,OAAAvB,IAAA,KAAAK,EAAAE,EAAAS,EAAAhB,GAAAqB,EAAAH,EAAAF,EAAAQ,EAAAjB,EAAA,GAAAN,EAAA,GAAAI,EAAAmB,IAAArB,KAAAQ,EAAAJ,GAAAC,EAAAD,EAAA,OAAAC,EAAA,MAAAD,EAAA,GAAAA,EAAA,GAAAR,GAAAQ,EAAA,IAAAc,KAAAhB,EAAAJ,EAAA,GAAAoB,EAAAd,EAAA,KAAAC,EAAA,EAAAU,EAAAC,EAAAhB,EAAAe,EAAAf,EAAAI,EAAA,IAAAc,EAAAG,IAAAnB,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAqB,KAAAjB,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAe,EAAAf,EAAAqB,EAAAhB,EAAA,OAAAH,GAAAJ,EAAA,SAAAmB,EAAA,MAAAH,GAAA,EAAAd,CAAA,iBAAAE,EAAAW,EAAAQ,GAAA,GAAAT,EAAA,QAAAU,UAAA,oCAAAR,GAAA,IAAAD,GAAAK,EAAAL,EAAAQ,GAAAhB,EAAAQ,EAAAL,EAAAa,GAAAxB,EAAAQ,EAAA,EAAAT,EAAAY,KAAAM,GAAA,CAAAV,IAAAC,EAAAA,EAAA,GAAAA,EAAA,IAAAU,EAAAf,GAAA,GAAAkB,EAAAb,EAAAG,IAAAO,EAAAf,EAAAQ,EAAAO,EAAAC,EAAAR,GAAA,OAAAI,EAAA,EAAAR,EAAA,IAAAC,IAAAH,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAA0B,KAAAnB,EAAAI,IAAA,MAAAc,UAAA,wCAAAzB,EAAA2B,KAAA,OAAA3B,EAAAW,EAAAX,EAAAV,MAAAkB,EAAA,IAAAA,EAAA,YAAAA,IAAAR,EAAAO,EAAAqB,SAAA5B,EAAA0B,KAAAnB,GAAAC,EAAA,IAAAG,EAAAc,UAAA,oCAAApB,EAAA,YAAAG,EAAA,GAAAD,EAAAR,CAAA,UAAAC,GAAAiB,EAAAC,EAAAf,EAAA,GAAAQ,EAAAV,EAAAyB,KAAAvB,EAAAe,MAAAE,EAAA,YAAApB,GAAAO,EAAAR,EAAAS,EAAA,EAAAG,EAAAX,CAAA,SAAAe,EAAA,UAAAzB,MAAAU,EAAA2B,KAAAV,EAAA,GAAAhB,EAAAI,EAAAE,IAAA,GAAAI,CAAA,KAAAS,EAAA,YAAAV,IAAA,UAAAmB,IAAA,UAAAC,IAAA,CAAA9B,EAAAY,OAAAmB,eAAA,IAAAvB,EAAA,GAAAL,GAAAH,EAAAA,EAAA,GAAAG,QAAAW,EAAAd,EAAA,GAAAG,EAAA,yBAAAH,GAAAW,EAAAmB,EAAArB,UAAAC,EAAAD,UAAAG,OAAAC,OAAAL,GAAA,SAAAO,EAAAhB,GAAA,OAAAa,OAAAoB,eAAApB,OAAAoB,eAAAjC,EAAA+B,IAAA/B,EAAAkC,UAAAH,EAAAhB,EAAAf,EAAAM,EAAA,sBAAAN,EAAAU,UAAAG,OAAAC,OAAAF,GAAAZ,CAAA,QAAA8B,EAAApB,UAAAqB,EAAAhB,EAAAH,EAAA,cAAAmB,GAAAhB,EAAAgB,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAApB,EAAAgB,EAAAzB,EAAA,qBAAAS,EAAAH,GAAAG,EAAAH,EAAAN,EAAA,aAAAS,EAAAH,EAAAR,EAAA,yBAAAW,EAAAH,EAAA,oDAAAwB,EAAA,kBAAAC,EAAA7B,EAAA8B,EAAAtB,EAAA,cAAAD,EAAAf,EAAAE,EAAAE,EAAAH,GAAA,IAAAO,EAAAK,OAAA0B,eAAA,IAAA/B,EAAA,gBAAAR,GAAAQ,EAAA,EAAAO,EAAA,SAAAf,EAAAE,EAAAE,EAAAH,GAAA,SAAAK,EAAAJ,EAAAE,GAAAW,EAAAf,EAAAE,EAAA,SAAAF,GAAA,YAAAwC,QAAAtC,EAAAE,EAAAJ,EAAA,GAAAE,EAAAM,EAAAA,EAAAR,EAAAE,EAAA,CAAAX,MAAAa,EAAAqC,YAAAxC,EAAAyC,cAAAzC,EAAA0C,UAAA1C,IAAAD,EAAAE,GAAAE,GAAAE,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAS,EAAAf,EAAAE,EAAAE,EAAAH,EAAA,UAAA2C,EAAAxC,EAAAH,EAAAD,EAAAE,EAAAI,EAAAe,EAAAZ,GAAA,QAAAD,EAAAJ,EAAAiB,GAAAZ,GAAAG,EAAAJ,EAAAjB,KAAA,OAAAa,GAAA,YAAAJ,EAAAI,EAAA,CAAAI,EAAAoB,KAAA3B,EAAAW,GAAAiC,QAAAC,QAAAlC,GAAAmC,KAAA7C,EAAAI,EAAA,UAAA0C,EAAA5C,GAAA,sBAAAH,EAAA,KAAAD,EAAAiD,UAAA,WAAAJ,QAAA,SAAA3C,EAAAI,GAAA,IAAAe,EAAAjB,EAAA8C,MAAAjD,EAAAD,GAAA,SAAAmD,EAAA/C,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,OAAAhD,EAAA,UAAAgD,EAAAhD,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,QAAAhD,EAAA,CAAA+C,OAAA,MAaO,SAAeE,IAAyB,OAAAC,EAAAJ,MAAC,KAADD,UAAA,CA+I/C,SAAAK,IAFC,OAEDA,EAAAN,EAAAZ,IAAAE,EA/IO,SAAAiB,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAArC,IAAAC,EAAA,SAAAqC,GAAA,cAAAA,EAAAzD,EAAAyD,EAAAtE,GAAA,OAKmD,GAJlDoD,EAAgBmB,SAASC,eAAe,kBACxCnB,EAAoBkB,SAASC,eAAe,sBAC5ClB,EAAciB,SAASC,eAAe,gBACtCjB,EAAegB,SAASC,eAAe,iBACvChB,EAASe,SAASC,eAAe,kBAElCpB,GAAkBI,EAAM,CAAAc,EAAAtE,EAAA,QACa,OAAxCyE,MAAM,kCAAkCH,EAAArD,EAAA,UAqCD,OAhCrCwC,EAAqB,GACnBC,EAAS,SAACgB,GAAqC,IAApBC,EAAO9B,UAAAzB,OAAA,QAAAwD,IAAA/B,UAAA,IAAAA,UAAA,GAChCgC,GAAY,IAAIC,MAAOC,qBACvBC,EAAU,GAAHC,OAAMJ,EAAS,KAAAI,OAAIP,GAChCjB,EAASyB,KAAKF,GACdG,QAAQC,IAAIJ,GAGZ,IAAMK,EAAQV,EAAU,UAAY,OACpCvB,EAAckC,UAAY,kDAAHL,OACoBN,EAAU,UAAY,UAAS,4CAAAM,OAA2CN,EAAU,UAAY,OAAM,2EAAAM,OACjFI,EAAK,OAAAJ,OAAMP,EAAO,gLAAAO,OAE1ExB,EAAS8B,IAAI,SAAAC,GAAI,qCAAAP,OAAmCO,EAAI,YAAUC,KAAK,IAAG,uCAIpF,EAACnB,EAAAzD,EAAA,EAGC2C,EAAOkC,UAAW,EACdrC,IAAmBA,EAAkBsC,MAAMC,QAAU,SAKzDlC,EAAO,4CACHH,IAAcA,EAAasC,YAAc,8BACzCvC,IAAaA,EAAYqC,MAAMG,MAAQ,OAAMxB,EAAAzD,EAAA,EAI/C6C,EAAO,8BAA8BY,EAAAtE,EAAA,EACnB+F,IAA2B,OAA7CpC,EAASW,EAAAtD,EACT0C,EAAO,iBAADuB,OAAkBtB,EAAUqC,KAAK5E,OAAM,YAAA6D,OAAWtB,EAAUsC,aAAa7E,OAAM,kBACjFkC,IAAaA,EAAYqC,MAAMG,MAAQ,OAAMxB,EAAAtE,EAAA,eAGF,MAHEsE,EAAAzD,EAAA,EAAAqD,EAAAI,EAAAtD,EAE3C4C,EAASM,aAAwBgC,MAAQhC,EAAaQ,QAAUyB,OAAMjC,GAC5ER,EAAO,wBAADuB,OAAyBrB,IAAU,GACnC,IAAIsC,MAAM,kBAADjB,OAAmBrB,IAAS,OAYM,OANnDF,EAAO,4CACHH,IAAcA,EAAasC,YAAc,uCACzCvC,IAAaA,EAAYqC,MAAMG,MAAQ,OAAMxB,EAAAzD,EAAA,EAI/C6C,EAAO,0CAA0CY,EAAAtE,EAAA,EAE9BoG,EAAkBzC,EAAWD,GAAO,OAAvDG,EAAUS,EAAAtD,EAEV0C,EAAO,cAADuB,OAAepB,EAAWzC,OAAM,+BAClCkC,IAAaA,EAAYqC,MAAMG,MAAQ,OAAMxB,EAAAtE,EAAA,gBAGK,MAHLsE,EAAAzD,EAAA,EAAAsD,EAAAG,EAAAtD,EAE3C4C,EAASO,aAAqB+B,MAAQ/B,EAAUO,QAAUyB,OAAMhC,GACtET,EAAO,+BAADuB,OAAgCrB,IAAU,GAC1C,IAAIsC,MAAM,kBAADjB,OAAmBrB,IAAS,QAQI,OAFjDF,EAAO,gDACHH,IAAcA,EAAasC,YAAc,8BACzCvC,IAAaA,EAAYqC,MAAMG,MAAQ,OAAMxB,EAAAzD,EAAA,GAAAyD,EAAAtE,EAAA,GAGzCqG,EAAkBxC,GAAW,QACnCH,EAAO,mBAADuB,OAAoBpB,EAAWzC,OAAM,gBACvCkC,IAAaA,EAAYqC,MAAMG,MAAQ,QAAOxB,EAAAtE,EAAA,iBAGJ,MAHIsE,EAAAzD,EAAA,GAAAuD,EAAAE,EAAAtD,EAE5C4C,EAASQ,aAAwB8B,MAAQ9B,EAAaM,QAAUyB,OAAM/B,GAC5EV,EAAO,uBAADuB,OAAwBrB,IAAU,GAClC,IAAIsC,MAAM,kBAADjB,OAAmBrB,IAAS,QAM7CR,EAAckC,UAAY,qYAAHL,OAIfxB,EAAS8B,IAAI,SAAAC,GAAI,qCAAAP,OAAmCO,EAAI,YAAUC,KAAK,IAAG,wCAI9ElC,IAAcA,EAAasC,YAAc,aAE7CS,WAAW,WACLjD,IAAmBA,EAAkBsC,MAAMC,QAAU,OAC3D,EAAG,KAAMtB,EAAAtE,EAAA,iBAAAsE,EAAAzD,EAAA,GAAAwD,EAAAC,EAAAtD,EAGTmE,QAAQoB,MAAM,gBAAelC,GAEvBL,EAAeK,aAAiB6B,MAAQ7B,EAAMK,QAAUyB,OAAM9B,GAC9DJ,EAAaI,aAAiB6B,MAAQ7B,EAAMmC,MAAQ,GAE1DpD,EAAckC,UAAY,0SAAHL,OAG+CjB,EAAY,qMAAAiB,OAE1ExB,EAAS8B,IAAI,SAAAC,GAAI,qCAAAP,OAAmCO,EAAI,YAAUC,KAAK,IAAG,oUAAAR,OAIqEhB,GAAc,2BAA0B,kDAK3LV,IACFA,EAAasC,YAAc,SAC3BtC,EAAaoC,MAAMN,MAAQ,WAGzB/B,IACDA,EAA4BqC,MAAMc,WAAa,WACjD,QAEuB,OAFvBnC,EAAAzD,EAAA,GAED2C,EAAOkC,UAAW,EAAMpB,EAAA1D,EAAA,mBAAA0D,EAAArD,EAAA,KAAAkC,EAAA,4CAE3BD,EAAAJ,MAAA,KAAAD,UAAA,UAKckD,IAAyB,OAAAW,EAAA5D,MAAC,KAADD,UAAA,CAqBxC,SAAA6D,IAFC,OAEDA,EAAA9D,EAAAZ,IAAAE,EArBA,SAAAyE,IAAA,OAAA3E,IAAAC,EAAA,SAAA2E,GAAA,cAAAA,EAAA5G,EAAA,OAAA4G,EAAA3F,EAAA,EACS4F,KAAKC,IAAG,eAAAC,EAAAnE,EAAAZ,IAAAE,EAAC,SAAA8E,EAAOC,GAAO,IAAAC,EAAAlB,EAAAmB,EAAAlB,EAAA,OAAAjE,IAAAC,EAAA,SAAAmF,GAAA,cAAAA,EAAApH,GAAA,OAEV,OADZkH,EAAOD,EAAQ1C,SAAS2C,MACzBG,KAAK,QAAQD,EAAApH,EAAA,EACZiH,EAAQK,OAAM,OAQpB,OANMtB,EAAOkB,EAAKlB,KAGZmB,EAAmB,iBACnBlB,EAAesB,MAAMC,KAAK,IAAIC,IAAIzB,EAAK0B,MAAMP,IAAqB,KAExEC,EAAAnG,EAAA,EACO,CACL+E,KAAAA,EACA2B,OAAQ,GACR1B,aAAAA,IACD,EAAAe,EAAA,IACF,gBAAAY,GAAA,OAAAb,EAAAjE,MAAA,KAAAD,UAAA,EAjBc,IAiBb,EAAA8D,EAAA,IACHD,EAAA5D,MAAA,KAAAD,UAAA,UAMcuD,EAAiByB,EAAAC,GAAA,OAAAC,EAAAjF,MAAC,KAADD,UAAA,CAehC,SAAAkF,IAFC,OAEDA,EAAAnF,EAAAZ,IAAAE,EAfA,SAAA8F,EACErE,EACAD,GAAgD,OAAA1B,IAAAC,EAAA,SAAAgG,GAAA,cAAAA,EAAAjI,GAAA,OAIhD,OAFA0D,EAAO,wDAEPuE,EAAAjI,EAAA,EACM,IAAIyC,QAAQ,SAAAC,GAAO,OAAI4D,WAAW5D,EAAS,IAAI,GAAC,OAG2B,OADjFgB,EAAO,0BAADuB,OAA2BjG,EAAoBoC,OAAM,gBAC3DsC,EAAO,0EAA0EuE,EAAAhH,EAAA,EAE1EjC,GAAmB,EAAAgJ,EAAA,KAC3BlF,MAAA,KAAAD,UAAA,UAKcwD,EAAiB6B,GAAA,OAAAC,EAAArF,MAAC,KAADD,UAAA,CAuDhC,SAAAsF,IAFC,OAEDA,EAAAvF,EAAAZ,IAAAE,EAvDA,SAAAkG,EAAiCvE,GAA+B,OAAA7B,IAAAC,EAAA,SAAAoG,GAAA,cAAAA,EAAArI,EAAA,OAAAqI,EAAApH,EAAA,EACvD4F,KAAKC,IAAG,eAAAwB,EAAA1F,EAAAZ,IAAAE,EAAC,SAAAqG,EAAOtB,GAAO,IAAAuB,EAAAC,EAAArI,EAAAsI,EAAAC,EAAAC,EAAA,OAAA5G,IAAAC,EAAA,SAAA4G,GAAA,cAAAA,EAAAhI,EAAAgI,EAAA7I,GAAA,OAC5BmF,QAAQC,IAAI,0CAA2CvB,EAAWzC,QAGlE6F,EAAQ1C,SAASuE,mBAAqBjC,KAAKkC,mBAAmBC,SAE9D,IACE/B,EAAQ1C,SAAS0E,WAAWC,OAAS,aACrCjC,EAAQ1C,SAAS0E,WAAW5B,KAAK,SACnC,CAAE,MAAOzH,GACPuF,QAAQgE,KAAK,wBAAyBvJ,EACxC,CAAC,OAAAiJ,EAAA7I,EAAA,EAEKiH,EAAQK,OAAM,OAEhBkB,EAAe,EACfC,EAAe,EAEVrI,EAAI,EAAC,YAAEA,EAAIyD,EAAWzC,QAAM,CAAAyH,EAAA7I,EAAA,SAC7B0I,EAAY7E,EAAWzD,GAC7B+E,QAAQC,IAAI,cAADH,OAAe7E,EAAI,EAAC,KAAA6E,OAAIpB,EAAWzC,OAAM,YAAA6D,OAAWyD,EAAUzJ,OAAQ4J,EAAAhI,EAAA,EAAA8H,EAGvED,EAAUzJ,KAAI4J,EAAA7I,EACf,kBADe2I,EACA,EAGf,uBAHeA,EAGK,EAGpB,gBAHoBA,EAGP,EAGb,eAHaA,EAGD,0BAAAE,EAAA7I,EAAA,EARToJ,EAAqBnC,EAASyB,GAAU,cAAAG,EAAA5H,EAAA,oBAAA4H,EAAA7I,EAAA,EAGxCqJ,EAA0BpC,EAASyB,GAAU,cAAAG,EAAA5H,EAAA,oBAAA4H,EAAA7I,EAAA,EAG7CsJ,EAAmBrC,EAASyB,GAAU,cAAAG,EAAA5H,EAAA,qBAAA4H,EAAA7I,EAAA,GAGtCuJ,EAAkBtC,EAASyB,GAAU,eAAAG,EAAA5H,EAAA,cAI5B,OADfkE,QAAQgE,KAAK,0BAA2BT,GACxCD,IAAeI,EAAA5H,EAAA,qBAAA4H,EAAA7I,EAAA,GAIbiH,EAAQK,OAAM,QACpBkB,IAAeK,EAAA7I,EAAA,iBAAA6I,EAAAhI,EAAA,GAAA+H,EAAAC,EAAA7H,EAEfyH,IACAtD,QAAQoB,MAAM,aAADtB,OAAc7E,EAAC,YAAAwI,GAAmB,QA5BZxI,IAAGyI,EAAA7I,EAAA,gBAgC1CmF,QAAQC,IAAI,yBAA0B,CAAEoE,MAAO3F,EAAWzC,OAAQqI,QAASjB,EAAckB,OAAQjB,IAAgB,eAAAI,EAAA5H,EAAA,KAAAsH,EAAA,kBAClH,gBAAAoB,GAAA,OAAArB,EAAAxF,MAAA,KAAAD,UAAA,EAnDc,IAmDb,EAAAuF,EAAA,IACHD,EAAArF,MAAA,KAAAD,UAAA,UAKcuG,EAAoBQ,EAAAC,GAAA,OAAAC,EAAAhH,MAAC,KAADD,UAAA,CAsCnC,SAAAiH,IAFC,OAEDA,EAAAlH,EAAAZ,IAAAE,EAtCA,SAAA6H,EACE9C,EACAyB,GAAgE,IAAAf,EAAAqC,EAAAC,EAAAvK,EAAAwK,EAAAvK,EAAA,OAAAqC,IAAAC,EAAA,SAAAkI,GAAA,cAAAA,EAAAnK,GAAA,OAG3C,OADf2H,EAASV,EAAQ1C,SAAS2C,KAAKS,QAC9BN,KAAK,SAAS8C,EAAAnK,EAAA,EACfiH,EAAQK,OAAM,YAEhBoB,EAAUjJ,YAAckI,EAAOyC,MAAMhJ,QAAM,CAAA+I,EAAAnK,EAAA,QACW,OAAxDmF,QAAQgE,KAAK,SAADlE,OAAUyD,EAAUjJ,WAAU,eAAc0K,EAAAlJ,EAAA,UAMvC,OAFb+I,EAAQrC,EAAOyC,MAAM1B,EAAUjJ,aAC/BwK,EAAOD,EAAMC,MACd5C,KAAK,SAAS8C,EAAAnK,EAAA,EACbiH,EAAQK,OAAM,YAEhBoB,EAAUhJ,KAAOuK,EAAKG,MAAMhJ,QAAM,CAAA+I,EAAAnK,EAAA,QACW,OAA/CmF,QAAQgE,KAAK,OAADlE,OAAQyD,EAAUhJ,IAAG,eAAcyK,EAAAlJ,EAAA,UAM7B,OAFdvB,EAAMuK,EAAKG,MAAM1B,EAAUhJ,MAC3BwK,EAAQxK,EAAIwK,OACZ7C,KAAK,SAAS8C,EAAAnK,EAAA,EACdiH,EAAQK,OAAM,YAEhBoB,EAAU/I,MAAQuK,EAAME,MAAMhJ,QAAM,CAAA+I,EAAAnK,EAAA,QACW,OAAjDmF,QAAQgE,KAAK,QAADlE,OAASyD,EAAU/I,KAAI,eAAcwK,EAAAlJ,EAAA,WAI7CtB,EAAOuK,EAAME,MAAM1B,EAAU/I,OAC9BuH,KAAKmD,QACV1K,EAAKuH,KAAKoD,WAAW5B,EAAUvJ,MAAO0H,KAAK0D,eAAeC,OAAO,cAAAL,EAAAlJ,EAAA,KAAA8I,EAAA,KAClEjH,MAAA,KAAAD,UAAA,UAKcwG,EAAyBoB,EAAAC,GAAA,OAAAC,EAAA7H,MAAC,KAADD,UAAA,CAsExC,SAAA8H,IAFC,OAEDA,EAAA/H,EAAAZ,IAAAE,EAtEA,SAAA0I,EACE3D,EACAyB,GAAqE,IAAAmC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3J,IAAAC,EAAA,SAAA2J,GAAA,cAAAA,EAAA/K,EAAA+K,EAAA5L,GAAA,OAgBzC,OAbtB6K,EAAoBnC,EAAUxJ,OAAOkC,OADjB,IAGtB0J,EAAapC,EAAUxJ,OAEvB2L,IACIE,EAAcrC,EAAUxJ,OAAOwI,MAAM,gCAC3CoD,EAAaC,EAAcA,EAAY,GAAKrC,EAAUxJ,OAAO2M,UAAU,EAAG,OAGtEb,EAAgB/D,EAAQ1C,SAAS2C,KAAK4E,OAAOhB,EAAY,CAC7DiB,WAAW,EACXC,gBAAgB,KAEJ3E,KAAK,SAASuE,EAAA5L,EAAA,EACtBiH,EAAQK,OAAM,UAEe,IAA/B0D,EAAcZ,MAAMhJ,OAAY,CAAAwK,EAAA5L,EAAA,QACmB,OAArDmF,QAAQgE,KAAK,0BAADlE,OAA2B6F,IAAcc,EAAA3K,EAAA,UAIlC,GAAjBgK,EAAgB,GAEhBJ,EAAmB,CAAFe,EAAA5L,EAAA,SAAAkL,EAAAe,EACEjB,EAAcZ,OAAKwB,EAAA/K,EAAA,EAAAqK,EAAAgB,IAAA,WAAAf,EAAAD,EAAAlL,KAAAwB,KAAE,CAAFoK,EAAA5L,EAAA,SAGb,OAHhBoL,EAAMD,EAAAhM,MAAAyM,EAAA/K,EAAA,GAEPwK,EAAYD,EAAOe,WAAWC,YAC1B/E,KAAK,QAAQuE,EAAA5L,EAAA,EACjBiH,EAAQK,OAAM,OAG4C,GAD1DgE,EAAgBD,EAAUrF,MAGN,KAFpBuF,EAAmBD,EAAce,QAAQ3D,EAAUxJ,SAE9B,CAAA0M,EAAA5L,EAAA,QAOT,GANVwL,EAAUF,EAAcO,UAAU,EAAGN,GAC5B7C,EAAUvJ,MACVmM,EAAcO,UAAUN,EAAmB7C,EAAUxJ,OAAOkC,QAE3EiK,EAAUhB,QACVgB,EAAUf,WAAWkB,EAAS3E,KAAK0D,eAAeC,OAClDS,KAE6B,IAAzBvC,EAAUtJ,WAAoB,CAAAwM,EAAA5L,EAAA,eAAA4L,EAAA3K,EAAA,aAAA2K,EAAA5L,EAAA,eAIpB,GAJoB4L,EAAA/K,EAAA,EAAA+K,EAAA5K,EAGpCoK,EAAOd,WAAW5B,EAAUvJ,MAAO0H,KAAK0D,eAAe+B,SACvDrB,KAC6B,IAAzBvC,EAAUtJ,WAAoB,CAAAwM,EAAA5L,EAAA,eAAA4L,EAAA3K,EAAA,aAAA2K,EAAA5L,EAAA,gBAAA4L,EAAA5L,EAAA,iBAAA4L,EAAA/K,EAAA,GAAA8K,EAAAC,EAAA5K,EAAAkK,EAAAtL,EAAA+L,GAAA,eAAAC,EAAA/K,EAAA,GAAAqK,EAAAtK,IAAAgL,EAAAhL,EAAA,YAAAgL,EAAA5L,EAAA,iBAItC,IAA6B,IAAzB0I,EAAUtJ,WAAsB,CAAAqM,EAAAQ,EACbjB,EAAcZ,OAAK,IAAxC,IAAAqB,EAAAS,MAAAR,EAAAD,EAAAzL,KAAAwB,MAAiBkK,EAAAvM,MACRmL,WAAW5B,EAAUvJ,MAAO0H,KAAK0D,eAAe+B,SACvDrB,GACD,OAAAsB,GAAAd,EAAA7L,EAAA2M,EAAA,SAAAd,EAAA7K,GAAA,CACH,MACEoK,EAAcZ,MAAM,GAAGE,WAAW5B,EAAUvJ,MAAO0H,KAAK0D,eAAe+B,SACvErB,EAAgB,EACjB,QAGH9F,QAAQC,IAAI,YAADH,OAAagG,EAAa,iBAAgB,eAAAW,EAAA3K,EAAA,KAAA2J,EAAA,+BACtD9H,MAAA,KAAAD,UAAA,UAKcyG,EAAkBkD,EAAAC,GAAA,OAAAC,EAAA5J,MAAC,KAADD,UAAA,CAqBjC,SAAA6J,IAFC,OAEDA,EAAA9J,EAAAZ,IAAAE,EArBA,SAAAyK,EACE1F,EACAyB,GAA8D,IAAAsC,EAAA4B,EAAAC,EAAA,OAAA7K,IAAAC,EAAA,SAAA6K,GAAA,cAAAA,EAAA9M,GAAA,OAMlC,OAJtBgL,EAAgB/D,EAAQ1C,SAAS2C,KAAK4E,OAAOpD,EAAUxJ,OAAQ,CACnE6M,UAAWrD,EAAUqD,YAAa,EAClCC,eAAgBtD,EAAUsD,iBAAkB,KAEhC3E,KAAK,SAASyF,EAAA9M,EAAA,EACtBiH,EAAQK,OAAM,UAEe,IAA/B0D,EAAcZ,MAAMhJ,OAAY,CAAA0L,EAAA9M,EAAA,QACkB,OAApDmF,QAAQgE,KAAK,mBAADlE,OAAoByD,EAAUxJ,SAAU4N,EAAA7L,EAAA,UAAA2L,EAAAX,EAIjCjB,EAAcZ,OAAK,IAAxC,IAAAwC,EAAAV,MAAAW,EAAAD,EAAA5M,KAAAwB,MAAiBqL,EAAA1N,MACRmL,WAAW5B,EAAUvJ,MAAO0H,KAAK0D,eAAe+B,QACxD,OAAAC,GAAAK,EAAAhN,EAAA2M,EAAA,SAAAK,EAAAhM,GAAA,eAAAkM,EAAA7L,EAAA,KAAA0L,EAAA,KACF7J,MAAA,KAAAD,UAAA,UAKc0G,EAAiBwD,EAAAC,GAAA,OAAAC,EAAAnK,MAAC,KAADD,UAAA,UAAAoK,IAmB/B,OAnB+BA,EAAArK,EAAAZ,IAAAE,EAAhC,SAAAgL,EACEjG,EACAyB,GAA6D,IAAAsC,EAAAmC,EAAAC,EAAA,OAAApL,IAAAC,EAAA,SAAAoL,GAAA,cAAAA,EAAArN,GAAA,OAMjC,OAJtBgL,EAAgB/D,EAAQ1C,SAAS2C,KAAK4E,OAAOpD,EAAUxJ,OAAQ,CACnE6M,WAAW,EACXC,gBAAgB,KAEJ3E,KAAK,SAASgG,EAAArN,EAAA,EACtBiH,EAAQK,OAAM,UAEe,IAA/B0D,EAAcZ,MAAMhJ,OAAY,CAAAiM,EAAArN,EAAA,QACkB,OAApDmF,QAAQgE,KAAK,mBAADlE,OAAoByD,EAAUxJ,SAAUmO,EAAApM,EAAA,UAAAkM,EAAAlB,EAIjCjB,EAAcZ,OAAK,IAAxC,IAAA+C,EAAAjB,MAAAkB,EAAAD,EAAAnN,KAAAwB,MAAiB4L,EAAAjO,MACRmO,QACR,OAAAf,GAAAY,EAAAvN,EAAA2M,EAAA,SAAAY,EAAAvM,GAAA,eAAAyM,EAAApM,EAAA,KAAAiM,EAAA,KACFpK,MAAA,KAAAD,UAAA,C,aCjaD,IAAAjD,EAAAC,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAAC,EAAAL,GAAAA,EAAAM,qBAAAC,EAAAP,EAAAO,EAAAC,EAAAC,OAAAC,OAAAL,EAAAC,WAAA,OAAAK,EAAAH,EAAA,mBAAAV,EAAAE,EAAAE,GAAA,IAAAE,EAAAC,EAAAG,EAAAI,EAAA,EAAAC,EAAAX,GAAA,GAAAY,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAb,EAAA,EAAAgB,EAAApB,EAAAqB,EAAAC,EAAAN,EAAAM,EAAAC,KAAAvB,EAAA,GAAAsB,EAAA,SAAArB,EAAAC,GAAA,OAAAM,EAAAP,EAAAQ,EAAA,EAAAG,EAAAZ,EAAAmB,EAAAf,EAAAF,EAAAmB,CAAA,YAAAC,EAAApB,EAAAE,GAAA,IAAAK,EAAAP,EAAAU,EAAAR,EAAAH,EAAA,GAAAiB,GAAAF,IAAAV,GAAAL,EAAAgB,EAAAO,OAAAvB,IAAA,KAAAK,EAAAE,EAAAS,EAAAhB,GAAAqB,EAAAH,EAAAF,EAAAQ,EAAAjB,EAAA,GAAAN,EAAA,GAAAI,EAAAmB,IAAArB,KAAAQ,EAAAJ,GAAAC,EAAAD,EAAA,OAAAC,EAAA,MAAAD,EAAA,GAAAA,EAAA,GAAAR,GAAAQ,EAAA,IAAAc,KAAAhB,EAAAJ,EAAA,GAAAoB,EAAAd,EAAA,KAAAC,EAAA,EAAAU,EAAAC,EAAAhB,EAAAe,EAAAf,EAAAI,EAAA,IAAAc,EAAAG,IAAAnB,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAqB,KAAAjB,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAe,EAAAf,EAAAqB,EAAAhB,EAAA,OAAAH,GAAAJ,EAAA,SAAAmB,EAAA,MAAAH,GAAA,EAAAd,CAAA,iBAAAE,EAAAW,EAAAQ,GAAA,GAAAT,EAAA,QAAAU,UAAA,oCAAAR,GAAA,IAAAD,GAAAK,EAAAL,EAAAQ,GAAAhB,EAAAQ,EAAAL,EAAAa,GAAAxB,EAAAQ,EAAA,EAAAT,EAAAY,KAAAM,GAAA,CAAAV,IAAAC,EAAAA,EAAA,GAAAA,EAAA,IAAAU,EAAAf,GAAA,GAAAkB,EAAAb,EAAAG,IAAAO,EAAAf,EAAAQ,EAAAO,EAAAC,EAAAR,GAAA,OAAAI,EAAA,EAAAR,EAAA,IAAAC,IAAAH,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAA0B,KAAAnB,EAAAI,IAAA,MAAAc,UAAA,wCAAAzB,EAAA2B,KAAA,OAAA3B,EAAAW,EAAAX,EAAAV,MAAAkB,EAAA,IAAAA,EAAA,YAAAA,IAAAR,EAAAO,EAAAqB,SAAA5B,EAAA0B,KAAAnB,GAAAC,EAAA,IAAAG,EAAAc,UAAA,oCAAApB,EAAA,YAAAG,EAAA,GAAAD,EAAAR,CAAA,UAAAC,GAAAiB,EAAAC,EAAAf,EAAA,GAAAQ,EAAAV,EAAAyB,KAAAvB,EAAAe,MAAAE,EAAA,YAAApB,GAAAO,EAAAR,EAAAS,EAAA,EAAAG,EAAAX,CAAA,SAAAe,EAAA,UAAAzB,MAAAU,EAAA2B,KAAAV,EAAA,GAAAhB,EAAAI,EAAAE,IAAA,GAAAI,CAAA,KAAAS,EAAA,YAAAV,IAAA,UAAAmB,IAAA,UAAAC,IAAA,CAAA9B,EAAAY,OAAAmB,eAAA,IAAAvB,EAAA,GAAAL,GAAAH,EAAAA,EAAA,GAAAG,QAAAW,EAAAd,EAAA,GAAAG,EAAA,yBAAAH,GAAAW,EAAAmB,EAAArB,UAAAC,EAAAD,UAAAG,OAAAC,OAAAL,GAAA,SAAAO,EAAAhB,GAAA,OAAAa,OAAAoB,eAAApB,OAAAoB,eAAAjC,EAAA+B,IAAA/B,EAAAkC,UAAAH,EAAAhB,EAAAf,EAAAM,EAAA,sBAAAN,EAAAU,UAAAG,OAAAC,OAAAF,GAAAZ,CAAA,QAAA8B,EAAApB,UAAAqB,EAAAhB,EAAAH,EAAA,cAAAmB,GAAAhB,EAAAgB,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAApB,EAAAgB,EAAAzB,EAAA,qBAAAS,EAAAH,GAAAG,EAAAH,EAAAN,EAAA,aAAAS,EAAAH,EAAAR,EAAA,yBAAAW,EAAAH,EAAA,oDAAAwB,EAAA,kBAAAC,EAAA7B,EAAA8B,EAAAtB,EAAA,cAAAD,EAAAf,EAAAE,EAAAE,EAAAH,GAAA,IAAAO,EAAAK,OAAA0B,eAAA,IAAA/B,EAAA,gBAAAR,GAAAQ,EAAA,EAAAO,EAAA,SAAAf,EAAAE,EAAAE,EAAAH,GAAA,SAAAK,EAAAJ,EAAAE,GAAAW,EAAAf,EAAAE,EAAA,SAAAF,GAAA,YAAAwC,QAAAtC,EAAAE,EAAAJ,EAAA,GAAAE,EAAAM,EAAAA,EAAAR,EAAAE,EAAA,CAAAX,MAAAa,EAAAqC,YAAAxC,EAAAyC,cAAAzC,EAAA0C,UAAA1C,IAAAD,EAAAE,GAAAE,GAAAE,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAS,EAAAf,EAAAE,EAAAE,EAAAH,EAAA,UAAA2C,EAAAxC,EAAAH,EAAAD,EAAAE,EAAAI,EAAAe,EAAAZ,GAAA,QAAAD,EAAAJ,EAAAiB,GAAAZ,GAAAG,EAAAJ,EAAAjB,KAAA,OAAAa,GAAA,YAAAJ,EAAAI,EAAA,CAAAI,EAAAoB,KAAA3B,EAAAW,GAAAiC,QAAAC,QAAAlC,GAAAmC,KAAA7C,EAAAI,EAAA,CAgBA,SAGeqN,IAAc,OAAAC,EAAA1K,MAAC,KAADD,UAAA,CA8B7B,SAAA2K,IAjDA,IAAAxN,EA+CC,OA/CDA,EAiDAgC,IAAAE,EA9BA,SAAAiB,IAAA,IAAAsK,EAAAjK,EAAAkK,EAAAC,EAAAzJ,EAAA,OAAAlC,IAAAC,EAAA,SAAAqC,GAAA,cAAAA,EAAAzD,EAAAyD,EAAAtE,GAAA,OAEyD,GADjDyN,EAAgBlJ,SAASC,eAAe,eACxChB,EAASe,SAASC,eAAe,iBAElCiJ,GAAkBjK,EAAM,CAAAc,EAAAtE,EAAA,eAAAsE,EAAArD,EAAA,UAMmC,OAJhEuC,EAAOkC,UAAW,EAClB+H,EAAc5H,YAAc,2CAG5B4H,EAAc5H,aAAe,mCAAmCvB,EAAAzD,EAAA,EAAAyD,EAAAtE,EAAA,EAEvC4N,MAAM,gDAA+C,OAA9D,OAARF,EAAQpJ,EAAAtD,EAAAsD,EAAAtE,EAAG,EACE0N,EAASG,OAAM,OAA5BF,EAAIrJ,EAAAtD,EACVyM,EAAc5H,aAAe,qCAAJZ,OAAyC0I,EAAKG,MAAK,QAAOxJ,EAAAtE,EAAA,eAG3D,OAH2DsE,EAAAzD,EAAA,EAAAqD,EAAAI,EAAAtD,EAEnFyM,EAAc5H,aAAe,+BAAJZ,OAAmCf,aAAiBgC,MAAQhC,EAAMQ,QAAU,UAAS,MAC9GlB,EAAOkC,UAAW,EAAMpB,EAAArD,EAAA,UAK1BwM,EAAc5H,aAAe,iCAC7B4H,EAAc5H,aAAe,mBAAJZ,OAAuB8I,OAAOC,SAASC,OAAM,MACtER,EAAc5H,aAAe,gBAAJZ,OAAoB8I,OAAOC,SAASE,KAAI,MACjET,EAAc5H,aAAe,aAAJZ,OAAiB8I,OAAOC,SAASG,SAAQ,MAElE3K,EAAOkC,UAAW,EAAM,cAAApB,EAAArD,EAAA,KAAAkC,EAAA,gBAG1BqK,EAjDA,eAAA3N,EAAA,KAAAD,EAAAiD,UAAA,WAAAJ,QAAA,SAAA3C,EAAAI,GAAA,IAAAe,EAAAjB,EAAA8C,MAAAjD,EAAAD,GAAA,SAAAmD,EAAA/C,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,OAAAhD,EAAA,UAAAgD,EAAAhD,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,QAAAhD,EAAA,CAAA+C,OAAA,MA+CCyK,EAAA1K,MAAA,KAAAD,UAAA,C,aC/CD,IAAAjD,EAAAC,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAAC,EAAAL,GAAAA,EAAAM,qBAAAC,EAAAP,EAAAO,EAAAC,EAAAC,OAAAC,OAAAL,EAAAC,WAAA,OAAAK,EAAAH,EAAA,mBAAAV,EAAAE,EAAAE,GAAA,IAAAE,EAAAC,EAAAG,EAAAI,EAAA,EAAAC,EAAAX,GAAA,GAAAY,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAb,EAAA,EAAAgB,EAAApB,EAAAqB,EAAAC,EAAAN,EAAAM,EAAAC,KAAAvB,EAAA,GAAAsB,EAAA,SAAArB,EAAAC,GAAA,OAAAM,EAAAP,EAAAQ,EAAA,EAAAG,EAAAZ,EAAAmB,EAAAf,EAAAF,EAAAmB,CAAA,YAAAC,EAAApB,EAAAE,GAAA,IAAAK,EAAAP,EAAAU,EAAAR,EAAAH,EAAA,GAAAiB,GAAAF,IAAAV,GAAAL,EAAAgB,EAAAO,OAAAvB,IAAA,KAAAK,EAAAE,EAAAS,EAAAhB,GAAAqB,EAAAH,EAAAF,EAAAQ,EAAAjB,EAAA,GAAAN,EAAA,GAAAI,EAAAmB,IAAArB,KAAAQ,EAAAJ,GAAAC,EAAAD,EAAA,OAAAC,EAAA,MAAAD,EAAA,GAAAA,EAAA,GAAAR,GAAAQ,EAAA,IAAAc,KAAAhB,EAAAJ,EAAA,GAAAoB,EAAAd,EAAA,KAAAC,EAAA,EAAAU,EAAAC,EAAAhB,EAAAe,EAAAf,EAAAI,EAAA,IAAAc,EAAAG,IAAAnB,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAqB,KAAAjB,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAe,EAAAf,EAAAqB,EAAAhB,EAAA,OAAAH,GAAAJ,EAAA,SAAAmB,EAAA,MAAAH,GAAA,EAAAd,CAAA,iBAAAE,EAAAW,EAAAQ,GAAA,GAAAT,EAAA,QAAAU,UAAA,oCAAAR,GAAA,IAAAD,GAAAK,EAAAL,EAAAQ,GAAAhB,EAAAQ,EAAAL,EAAAa,GAAAxB,EAAAQ,EAAA,EAAAT,EAAAY,KAAAM,GAAA,CAAAV,IAAAC,EAAAA,EAAA,GAAAA,EAAA,IAAAU,EAAAf,GAAA,GAAAkB,EAAAb,EAAAG,IAAAO,EAAAf,EAAAQ,EAAAO,EAAAC,EAAAR,GAAA,OAAAI,EAAA,EAAAR,EAAA,IAAAC,IAAAH,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAA0B,KAAAnB,EAAAI,IAAA,MAAAc,UAAA,wCAAAzB,EAAA2B,KAAA,OAAA3B,EAAAW,EAAAX,EAAAV,MAAAkB,EAAA,IAAAA,EAAA,YAAAA,IAAAR,EAAAO,EAAAqB,SAAA5B,EAAA0B,KAAAnB,GAAAC,EAAA,IAAAG,EAAAc,UAAA,oCAAApB,EAAA,YAAAG,EAAA,GAAAD,EAAAR,CAAA,UAAAC,GAAAiB,EAAAC,EAAAf,EAAA,GAAAQ,EAAAV,EAAAyB,KAAAvB,EAAAe,MAAAE,EAAA,YAAApB,GAAAO,EAAAR,EAAAS,EAAA,EAAAG,EAAAX,CAAA,SAAAe,EAAA,UAAAzB,MAAAU,EAAA2B,KAAAV,EAAA,GAAAhB,EAAAI,EAAAE,IAAA,GAAAI,CAAA,KAAAS,EAAA,YAAAV,IAAA,UAAAmB,IAAA,UAAAC,IAAA,CAAA9B,EAAAY,OAAAmB,eAAA,IAAAvB,EAAA,GAAAL,GAAAH,EAAAA,EAAA,GAAAG,QAAAW,EAAAd,EAAA,GAAAG,EAAA,yBAAAH,GAAAW,EAAAmB,EAAArB,UAAAC,EAAAD,UAAAG,OAAAC,OAAAL,GAAA,SAAAO,EAAAhB,GAAA,OAAAa,OAAAoB,eAAApB,OAAAoB,eAAAjC,EAAA+B,IAAA/B,EAAAkC,UAAAH,EAAAhB,EAAAf,EAAAM,EAAA,sBAAAN,EAAAU,UAAAG,OAAAC,OAAAF,GAAAZ,CAAA,QAAA8B,EAAApB,UAAAqB,EAAAhB,EAAAH,EAAA,cAAAmB,GAAAhB,EAAAgB,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAApB,EAAAgB,EAAAzB,EAAA,qBAAAS,EAAAH,GAAAG,EAAAH,EAAAN,EAAA,aAAAS,EAAAH,EAAAR,EAAA,yBAAAW,EAAAH,EAAA,oDAAAwB,EAAA,kBAAAC,EAAA7B,EAAA8B,EAAAtB,EAAA,cAAAD,EAAAf,EAAAE,EAAAE,EAAAH,GAAA,IAAAO,EAAAK,OAAA0B,eAAA,IAAA/B,EAAA,gBAAAR,GAAAQ,EAAA,EAAAO,EAAA,SAAAf,EAAAE,EAAAE,EAAAH,GAAA,SAAAK,EAAAJ,EAAAE,GAAAW,EAAAf,EAAAE,EAAA,SAAAF,GAAA,YAAAwC,QAAAtC,EAAAE,EAAAJ,EAAA,GAAAE,EAAAM,EAAAA,EAAAR,EAAAE,EAAA,CAAAX,MAAAa,EAAAqC,YAAAxC,EAAAyC,cAAAzC,EAAA0C,UAAA1C,IAAAD,EAAAE,GAAAE,GAAAE,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAS,EAAAf,EAAAE,EAAAE,EAAAH,EAAA,UAAAuO,EAAAlO,GAAA,OAAAkO,EAAA,mBAAArO,QAAA,iBAAAA,OAAAE,SAAA,SAAAC,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAH,QAAAG,EAAAmO,cAAAtO,QAAAG,IAAAH,OAAAO,UAAA,gBAAAJ,CAAA,EAAAkO,EAAAlO,EAAA,UAAAsC,EAAAxC,EAAAH,EAAAD,EAAAE,EAAAI,EAAAe,EAAAZ,GAAA,QAAAD,EAAAJ,EAAAiB,GAAAZ,GAAAG,EAAAJ,EAAAjB,KAAA,OAAAa,GAAA,YAAAJ,EAAAI,EAAA,CAAAI,EAAAoB,KAAA3B,EAAAW,GAAAiC,QAAAC,QAAAlC,GAAAmC,KAAA7C,EAAAI,EAAA,UAAA0C,EAAA5C,GAAA,sBAAAH,EAAA,KAAAD,EAAAiD,UAAA,WAAAJ,QAAA,SAAA3C,EAAAI,GAAA,IAAAe,EAAAjB,EAAA8C,MAAAjD,EAAAD,GAAA,SAAAmD,EAAA/C,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,OAAAhD,EAAA,UAAAgD,EAAAhD,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,QAAAhD,EAAA,CAAA+C,OAAA,eAAAuL,EAAA1O,EAAAE,GAAA,IAAAD,EAAAY,OAAA8N,KAAA3O,GAAA,GAAAa,OAAA+N,sBAAA,KAAAtO,EAAAO,OAAA+N,sBAAA5O,GAAAE,IAAAI,EAAAA,EAAAuO,OAAA,SAAA3O,GAAA,OAAAW,OAAAiO,yBAAA9O,EAAAE,GAAAuC,UAAA,IAAAxC,EAAAqF,KAAApC,MAAAjD,EAAAK,EAAA,QAAAL,CAAA,UAAA8O,EAAA/O,GAAA,QAAAE,EAAA,EAAAA,EAAA+C,UAAAzB,OAAAtB,IAAA,KAAAD,EAAA,MAAAgD,UAAA/C,GAAA+C,UAAA/C,GAAA,GAAAA,EAAA,EAAAwO,EAAA7N,OAAAZ,IAAA,GAAA+O,QAAA,SAAA9O,GAAA+O,EAAAjP,EAAAE,EAAAD,EAAAC,GAAA,GAAAW,OAAAqO,0BAAArO,OAAAsO,iBAAAnP,EAAAa,OAAAqO,0BAAAjP,IAAAyO,EAAA7N,OAAAZ,IAAA+O,QAAA,SAAA9O,GAAAW,OAAA0B,eAAAvC,EAAAE,EAAAW,OAAAiO,yBAAA7O,EAAAC,GAAA,UAAAF,CAAA,UAAAiP,EAAAjP,EAAAE,EAAAD,GAAA,OAAAC,EAAA,SAAAD,GAAA,IAAAO,EAAA,SAAAP,GAAA,aAAAuO,EAAAvO,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAE,OAAAiP,aAAA,YAAApP,EAAA,KAAAQ,EAAAR,EAAA2B,KAAA1B,EAAAC,UAAA,aAAAsO,EAAAhO,GAAA,OAAAA,EAAA,UAAAkB,UAAA,uDAAA6E,OAAAtG,EAAA,CAAAoP,CAAApP,GAAA,gBAAAuO,EAAAhO,GAAAA,EAAAA,EAAA,GAAA8O,CAAApP,MAAAF,EAAAa,OAAA0B,eAAAvC,EAAAE,EAAA,CAAAX,MAAAU,EAAAwC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAA3C,EAAAE,GAAAD,EAAAD,CAAA,CAYA,IAmDIuP,EAAkC,GAAHlK,OAnDc,CAC/C,CACEmK,GAAI,sBACJC,MAAO,0BACPC,YAAa,oDACbC,SAAS,GAEX,CACEH,GAAI,mBACJC,MAAO,mBACPC,YAAa,6CACbC,SAAS,GAEX,CACEH,GAAI,iBACJC,MAAO,iBACPC,YAAa,yDACbC,SAAS,GAEX,CACEH,GAAI,gBACJC,MAAO,6BACPC,YAAa,0DACbC,SAAS,GAEX,CACEH,GAAI,iBACJC,MAAO,0BACPC,YAAa,oEACbC,SAAS,GAEX,CACEH,GAAI,wBACJC,MAAO,wBACPC,YAAa,+CACbC,SAAS,GAEX,CACEH,GAAI,yBACJC,MAAO,yBACPC,YAAa,uCACbC,SAAS,GAEX,CACEH,GAAI,kBACJC,MAAO,2BACPC,YAAa,0CACbC,SAAS,KAuBb,SAASC,IACP,IAAMC,EAAYlL,SAASC,eAAe,mBAC1C,GAAKiL,EAAL,CAEA,IAAMC,EAAiBP,EAAeV,OAAO,SAAAkB,GAAI,OAAIA,EAAKJ,OAAO,GAAEnO,OAC7DwO,EAAaT,EAAe/N,OAC5ByO,EAAaC,KAAKC,MAAOL,EAAiBE,EAAc,KAGxDtM,EAAciB,SAASC,eAAe,0BACtCjB,EAAegB,SAASC,eAAe,2BAEzClB,IACDA,EAA4BqC,MAAMG,MAAQ,GAAHb,OAAM4K,EAAU,KACvDvM,EAA4BqC,MAAMc,WAA4B,MAAfoJ,EAC5C,UACA,oDAGFtM,IACFA,EAAasC,YAAc,GAAHZ,OAAMyK,EAAc,QAAAzK,OAAO2K,EAAU,gBAAA3K,OAAe4K,EAAU,OAIxFJ,EAAUnK,UAAY6J,EAAe5J,IAAI,SAAAoK,GAAI,iGAAA1K,OACyC0K,EAAKJ,QAAU,UAAY,UAAS,4CAAAtK,OAA2C0K,EAAKJ,QAAU,UAAY,UAAS,iCAAAtK,OAAgC0K,EAAKP,GAAE,qLAAAnK,OAE3I0K,EAAKJ,QAAU,UAAY,OAAM,kBAAAtK,OAAiB0K,EAAKJ,QAAU,UAAY,QAAO,iGAAAtK,OAC/K0K,EAAKJ,QAAU,wDAA0D,GAAE,yFAAAtK,OAGlD0K,EAAKJ,QAAU,MAAQ,MAAK,aAAAtK,OAAY0K,EAAKJ,QAAU,UAAY,OAAM,2CAAAtK,OAA0C0K,EAAKJ,QAAU,eAAiB,OAAM,qBAAAtK,OAChL0K,EAAKN,MAAK,kCAAApK,OAEZ0K,EAAKL,YAAc,gEAAHrK,OAAmE0K,EAAKL,YAAW,UAAW,GAAE,oDAIvH7J,KAAK,IAGRgK,EAAUO,iBAAiB,mBAAmBpB,QAAQ,SAAAqB,GACpDA,EAAQC,iBAAiB,QAAS,SAACtQ,GACjC,IAAMwP,EAAMxP,EAAEuQ,cAA8BC,aAAa,WACrDhB,GAQV,SAA6BA,GAC3B,IAAMO,EAAOR,EAAekB,KAAK,SAAAjQ,GAAC,OAAIA,EAAEgP,KAAOA,CAAE,GAC7CO,IACFA,EAAKJ,SAAWI,EAAKJ,QACrBC,IAEJ,CAdcc,CAAoBlB,EAC9B,EACF,EA5CsB,CA6CxB,CAgBA,SAASmB,IACPpB,EAAiBA,EAAe5J,IAAI,SAAAoK,GAAI,OAAAhB,EAAAA,EAAA,GAAUgB,GAAI,IAAEJ,SAAS,GAAK,GACtEC,IACAgB,EAAiB,kBAAmB,OACtC,CAEA,SAGeC,IAAe,OAAAC,EAAA5N,MAAC,KAADD,UAAA,CAoC9B,SAAA6N,IAFC,OAEDA,EAAA9N,EAAAZ,IAAAE,EApCA,SAAA8E,IAAA,IAAAxD,EAAAU,EAAA,OAAAlC,IAAAC,EAAA,SAAAmF,GAAA,cAAAA,EAAAvG,EAAAuG,EAAApH,GAAA,OAC0D,GAAlDwD,EAASe,SAASC,eAAe,kBAC1B,CAAF4C,EAAApH,EAAA,eAAAoH,EAAAnG,EAAA,UAGwB,OADnCuC,EAAOkC,UAAW,EAClBlC,EAAOqC,YAAc,cAAcuB,EAAAvG,EAAA,EAAAuG,EAAApH,EAAA,EAG3B6G,KAAKC,IAAG,eAAAC,EAAAnE,EAAAZ,IAAAE,EAAC,SAAAiB,EAAO8D,GAAO,IAAAC,EAAAlB,EAAAmB,EAAAlB,EAAA0J,EAAA,OAAA3N,IAAAC,EAAA,SAAAqC,GAAA,cAAAA,EAAAtE,GAAA,OAET,OADZkH,EAAOD,EAAQ1C,SAAS2C,MACzBG,KAAK,QAAQ/C,EAAAtE,EAAA,EACZiH,EAAQK,OAAM,OAEdtB,EAAOkB,EAAKlB,KAGZmB,EAAmB,kBACnBlB,EAAeD,EAAK0B,MAAMP,KAEa,IAAxBlB,EAAa7E,SAC1BuO,EAAOR,EAAekB,KAAK,SAAAjQ,GAAC,MAAa,wBAATA,EAAEgP,EAA4B,MAC1DO,EAAKJ,SAAU,GAG3BC,IACAgB,EAAiB,uBAAwB,WAAW,cAAAlM,EAAArD,EAAA,KAAAkC,EAAA,IACrD,gBAAA0E,GAAA,OAAAd,EAAAjE,MAAA,KAAAD,UAAA,EAlBa,IAkBZ,OAAAuE,EAAApH,EAAA,eAAAoH,EAAAvG,EAAA,EAAAqD,EAAAkD,EAAApG,EAEFmE,QAAQoB,MAAM,qBAAoBrC,GAClCsM,EAAiB,oBAAqB,SAAS,OAGD,OAHCpJ,EAAAvG,EAAA,EAE/C2C,EAAOkC,UAAW,EAClBlC,EAAOqC,YAAc,yBAAyBuB,EAAAxG,EAAA,iBAAAwG,EAAAnG,EAAA,KAAA+F,EAAA,qBAEjD0J,EAAA5N,MAAA,KAAAD,UAAA,CAKD,SAAS2N,EAAiB9L,GAA8D,IAA7CzF,EAAkC4D,UAAAzB,OAAA,QAAAwD,IAAA/B,UAAA,GAAAA,UAAA,GAAG,OACxE8N,EAAepM,SAASqM,cAAc,OAC5CD,EAAahL,MAAMkL,QAAU,oKAAH5L,OAID,YAAThG,EAAqB,UAAqB,UAATA,EAAmB,UAAY,UAAS,wFAIzF0R,EAAa9K,YAAcnB,EAC3BH,SAAS2C,KAAK4J,YAAYH,GAE1BrK,WAAW,WACTqK,EAAahL,MAAMoL,UAAY,qBAC/BzK,WAAW,kBAAMqK,EAAaK,QAAQ,EAAE,IAC1C,EAAG,IACL,CCrMO,SAASC,IACd9L,QAAQC,IAAI,sCAGZ,IAwBM8L,EACAC,EFjCAC,EACAC,EEOAC,EAAe/M,SAASC,eAAe,iBACzC8M,GACFA,EAAahM,UA0DR,07BAAPL,OFxBO,2/EEkCmB,YAAAA,ODiInB,muDChIoB,YAAAA,OCzEpB,q5BD0EiB,oBArEtBE,QAAQC,IAAI,qCAqBR8L,EAAa3M,SAASyL,iBAAiB,eACvCmB,EAAc5M,SAASyL,iBAAiB,gBAE9CkB,EAAWtC,QAAQ,SAAApL,GACjBA,EAAO0M,iBAAiB,QAAS,WAC/B,IAAMqB,EAAY/N,EAAO4M,aAAa,YAGtCc,EAAWtC,QAAQ,SAAA4C,GACjBA,EAAIC,UAAUT,OAAO,UACpBQ,EAAoB7L,MAAMc,WAAa,UACvC+K,EAAoB7L,MAAMN,MAAQ,MACrC,GACA8L,EAAYvC,QAAQ,SAAA8C,GAClBA,EAAQD,UAAUT,OAAO,UACxBU,EAAwB/L,MAAMC,QAAU,MAC3C,GAGApC,EAAOiO,UAAUE,IAAI,UACpBnO,EAAuBmC,MAAMc,WAAa,UAC1CjD,EAAuBmC,MAAMN,MAAQ,QAEtC,IAAMuM,EAAgBrN,SAASC,eAAe,GAADS,OAAIsM,EAAS,SACtDK,IACFA,EAAcH,UAAUE,IAAI,UAC5BC,EAAcjM,MAAMC,QAAU,OAElC,EACF,GF7DMwL,EAAe7M,SAASC,eAAe,kBACvC6M,EAAc9M,SAASC,eAAe,iBAExC4M,IAAcA,EAAaS,QAAU5O,GACrCoO,IAAaA,EAAYQ,QAAUtE,GGLvCpI,QAAQC,IAAI,6BF4DP,WACLoK,IAGA,IAAMsC,EAAWvN,SAASC,eAAe,uBACnCuN,EAAexN,SAASC,eAAe,kBAEzCsN,IAAUA,EAASD,QAAUtB,GAC7BwB,IAAcA,EAAaF,QAAUpB,EAC3C,CC7CEuB,GAEA7M,QAAQC,IAAI,gCAZVD,QAAQoB,MAAM,kCAalB,C","sources":["webpack://kenneth-office-addin-unified/./src/word/mockLLMResponse.ts","webpack://kenneth-office-addin-unified/./src/word/ai-rewrite-structured.ts","webpack://kenneth-office-addin-unified/./src/word/drafting-tab.ts","webpack://kenneth-office-addin-unified/./src/word/checklist-tab.ts","webpack://kenneth-office-addin-unified/./src/word/word-main.ts","webpack://kenneth-office-addin-unified/./src/word/ai-chat-tab.ts"],"sourcesContent":["/**\n * Mock LLM Response Data for Demo\n *\n * This file contains hardcoded document operations that simulate\n * what an AI backend would return. Perfect for demos without\n * requiring a live backend service.\n */\n\nimport type { DocumentOperation } from './types';\n\nexport const MOCK_LLM_OPERATIONS: DocumentOperation[] = [\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{company_name}}\",\n    value: \"ABERDEEN HOUSE CARE LIMITED\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"replaceText\",\n    target: \"….\",\n    value: \"10 September 2025\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replaceText\",\n    target: \"(introducer)\",\n    value: \"[TO BE COMPLETED - Introducer Name]\",\n    metadata: {\n      confidence: \"low\",\n      source: \"manual input\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{ CONDITION_1: whether prior relationship has existed. EITHER: Prior to this date, neither the firm nor the proposed Liquidators have had any other involvement with the Company or its Director. OR: Prior to this date, the proposed liquidators have had involvement with the director….}}\",\n    value: \"Prior to this date, neither the firm nor the proposed Liquidators have had any other involvement with the Company or its Director.\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"default assumption\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{our_firm_name}}\",\n    value: \"Kenneth AI\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{instruction_date}}\",\n    value: \"10 September 2025\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{date_scheduled_for_s100}}\",\n    value: \"13 September 2025\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{general_meeting_notice_date}}\",\n    value: \"06 September 2025\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{general_meeting_datetime}}\",\n    value: \"13 September 2025 at 10:00 AM\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{full_names_address_of_ip}}\",\n    value: \"ABERDEEN HOUSE CARE LIMITED, 123 Fictional Lane, Anytown, AB1 2CD\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"case details and searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{incorporation_date}}\",\n    value: \"15 June 2011\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{company_reg_number}}\",\n    value: \"07658860\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{trading_address}}\",\n    value: \"456 Business Road, Cityville, CV1 2EF\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{company_trading_activity}}\",\n    value: \"Operating care homes\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"deleteText\",\n    target: \"{{below table should be populated with list of previous registered addresses}}\",\n    metadata: {\n      confidence: \"high\",\n      reasoning: \"Template instruction for table below\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 1,\n    cell: 0,\n    value: \"15 June 2011\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 1,\n    cell: 1,\n    value: \"31 December 2023\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 1,\n    cell: 2,\n    value: \"789 Old Street, Townsville, TS1 2GH\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 2,\n    cell: 0,\n    value: \"01 January 2024\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 2,\n    cell: 1,\n    value: \"Current\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 0,\n    row: 2,\n    cell: 2,\n    value: \"Business Helpline Group Limited, 101 New Avenue, Metropolis, MT1 2IJ\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"replacePlaceholder\",\n    target: \"{{equity_capital_structure}}\",\n    value: \"is £100,000, comprising 100,000 Ordinary shares of £1 each\",\n    replaceAll: true,\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"deleteText\",\n    target: \"{{below table should list the name, shares and percentage of each shareholder}}\",\n    metadata: {\n      confidence: \"high\",\n      reasoning: \"Template instruction for table below\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 1,\n    cell: 0,\n    value: \"KOTECHA, Rakesh\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 1,\n    cell: 1,\n    value: \"50,000\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 1,\n    cell: 2,\n    value: \"50%\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 2,\n    cell: 0,\n    value: \"KOTECHA, Mahesh Vithaldas\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 2,\n    cell: 1,\n    value: \"50,000\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 1,\n    row: 2,\n    cell: 2,\n    value: \"50%\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"deleteText\",\n    target: \"{{below table should list the schema for officers of the company}}\",\n    metadata: {\n      confidence: \"high\",\n      reasoning: \"Template instruction for table below\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 1,\n    cell: 0,\n    value: \"KOTECHA, Rakesh\",\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 1,\n    cell: 1,\n    value: \"Director\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 1,\n    cell: 2,\n    value: \"15 June 2011\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 1,\n    cell: 3,\n    value: \"N/A\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 2,\n    cell: 0,\n    value: \"KOTECHA, Mahesh Vithaldas\",\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 2,\n    cell: 1,\n    value: \"Director\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 2,\n    cell: 2,\n    value: \"15 June 2011\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 2,\n    cell: 3,\n    value: \"N/A\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 3,\n    cell: 0,\n    value: \"KOTECHA, Pragna\",\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 3,\n    cell: 1,\n    value: \"Director\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 3,\n    cell: 2,\n    value: \"01 January 2015\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 3,\n    cell: 3,\n    value: \"N/A\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 4,\n    cell: 0,\n    value: \"KOTECHA, Trushali\",\n    metadata: {\n      confidence: \"high\",\n      source: \"case details\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 4,\n    cell: 1,\n    value: \"Director\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 4,\n    cell: 2,\n    value: \"01 January 2015\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  },\n  {\n    type: \"fillTableCell\",\n    tableIndex: 2,\n    row: 4,\n    cell: 3,\n    value: \"N/A\",\n    metadata: {\n      confidence: \"medium\",\n      source: \"searchCaseDocuments\"\n    }\n  }\n];\n","/**\n * AI Document Rewrite with Structured Operations - SIMPLIFIED VERSION\n *\n * Shows live progress in the UI and catches errors at each step\n */\n\n/* global Word */\n\nimport type { DocumentStructure, TableStructure, DocumentOperation } from './types';\nimport { MOCK_LLM_OPERATIONS } from './mockLLMResponse';\n\n/**\n * Main handler for structured AI document rewrite\n */\nexport async function handleStructuredAIRewrite(): Promise<void> {\n  const statusElement = document.getElementById(\"rewrite-status\");\n  const progressContainer = document.getElementById(\"progress-container\");\n  const progressBar = document.getElementById(\"progress-bar\");\n  const progressText = document.getElementById(\"progress-text\");\n  const button = document.getElementById(\"ai-rewrite-btn\") as HTMLButtonElement;\n\n  if (!statusElement || !button) {\n    alert(\"Required UI elements not found\");\n    return;\n  }\n\n  // Create live debug log that shows in the UI\n  let debugLog: string[] = [];\n  const addLog = (message: string, isError = false) => {\n    const timestamp = new Date().toLocaleTimeString();\n    const logLine = `${timestamp} ${message}`;\n    debugLog.push(logLine);\n    console.log(logLine);\n\n    // Update UI immediately\n    const color = isError ? '#d32f2f' : '#666';\n    statusElement.innerHTML = `\n      <div style=\"padding: 12px; background: ${isError ? '#ffebee' : '#f5f5f5'}; border-radius: 4px; border: 1px solid ${isError ? '#ef5350' : '#ddd'};\">\n        <div style=\"margin-bottom: 8px; font-weight: bold; color: ${color};\">${message}</div>\n        <div style=\"max-height: 200px; overflow-y: auto; font-size: 11px; font-family: monospace; background: white; padding: 8px; border-radius: 4px;\">\n          ${debugLog.map(line => `<div style=\"margin: 2px 0;\">${line}</div>`).join('')}\n        </div>\n      </div>\n    `;\n  };\n\n  try {\n    button.disabled = true;\n    if (progressContainer) progressContainer.style.display = 'block';\n\n    // =========================================================================\n    // STEP 1: Extract document text (SIMPLIFIED - NO TABLES)\n    // =========================================================================\n    addLog(\"📖 STEP 1/3: Extracting document text...\");\n    if (progressText) progressText.textContent = \"Step 1/3: Reading document\";\n    if (progressBar) progressBar.style.width = '10%';\n\n    let structure: DocumentStructure;\n    try {\n      addLog(\"  Loading document body...\");\n      structure = await extractDocumentSimplified();\n      addLog(`  ✅ Extracted ${structure.text.length} chars, ${structure.placeholders.length} placeholders`);\n      if (progressBar) progressBar.style.width = '33%';\n    } catch (extractError) {\n      const errMsg = extractError instanceof Error ? extractError.message : String(extractError);\n      addLog(`❌ EXTRACTION FAILED: ${errMsg}`, true);\n      throw new Error(`Step 1 failed: ${errMsg}`);\n    }\n\n    // =========================================================================\n    // STEP 2: Load mock AI response (DEMO MODE - NO BACKEND)\n    // =========================================================================\n    addLog(\"🤖 STEP 2/3: Loading mock AI response...\");\n    if (progressText) progressText.textContent = \"Step 2/3: AI processing (mock data)\";\n    if (progressBar) progressBar.style.width = '40%';\n\n    let operations: DocumentOperation[];\n    try {\n      addLog(\"  Loading pre-configured operations...\");\n\n      operations = await getMockOperations(structure, addLog);\n\n      addLog(`  ✅ Loaded ${operations.length} operations from mock data`);\n      if (progressBar) progressBar.style.width = '66%';\n    } catch (mockError) {\n      const errMsg = mockError instanceof Error ? mockError.message : String(mockError);\n      addLog(`❌ MOCK DATA LOADING FAILED: ${errMsg}`, true);\n      throw new Error(`Step 2 failed: ${errMsg}`);\n    }\n\n    // =========================================================================\n    // STEP 3: Execute operations\n    // =========================================================================\n    addLog(\"✍️ STEP 3/3: Applying changes to document...\");\n    if (progressText) progressText.textContent = \"Step 3/3: Applying changes\";\n    if (progressBar) progressBar.style.width = '75%';\n\n    try {\n      await executeOperations(operations);\n      addLog(`  ✅ Applied all ${operations.length} operations`);\n      if (progressBar) progressBar.style.width = '100%';\n    } catch (executeError) {\n      const errMsg = executeError instanceof Error ? executeError.message : String(executeError);\n      addLog(`❌ EXECUTION FAILED: ${errMsg}`, true);\n      throw new Error(`Step 3 failed: ${errMsg}`);\n    }\n\n    // =========================================================================\n    // SUCCESS!\n    // =========================================================================\n    statusElement.innerHTML = `\n      <div style=\"padding: 12px; background: #e8f5e9; border: 2px solid #4caf50; border-radius: 4px;\">\n        <div style=\"color: #2e7d32; font-weight: bold; margin-bottom: 8px;\">✅ Document updated successfully!</div>\n        <div style=\"max-height: 200px; overflow-y: auto; font-size: 11px; font-family: monospace; background: white; padding: 8px; border-radius: 4px;\">\n          ${debugLog.map(line => `<div style=\"margin: 2px 0;\">${line}</div>`).join('')}\n        </div>\n      </div>\n    `;\n    if (progressText) progressText.textContent = \"Complete!\";\n\n    setTimeout(() => {\n      if (progressContainer) progressContainer.style.display = 'none';\n    }, 3000);\n\n  } catch (error) {\n    console.error('[FATAL ERROR]', error);\n\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    const errorStack = error instanceof Error ? error.stack : '';\n\n    statusElement.innerHTML = `\n      <div style=\"padding: 12px; background: #ffebee; border: 2px solid #d32f2f; border-radius: 4px;\">\n        <div style=\"color: #d32f2f; font-weight: bold; margin-bottom: 8px; font-size: 16px;\">❌ PROCESS FAILED</div>\n        <div style=\"margin-bottom: 12px; color: #333; font-size: 14px;\">${errorMessage}</div>\n        <div style=\"margin-bottom: 12px; max-height: 200px; overflow-y: auto; font-size: 11px; font-family: monospace; background: white; padding: 8px; border-radius: 4px;\">\n          ${debugLog.map(line => `<div style=\"margin: 2px 0;\">${line}</div>`).join('')}\n        </div>\n        <details style=\"margin-top: 8px;\">\n          <summary style=\"cursor: pointer; color: #d32f2f; font-size: 12px;\">Show stack trace</summary>\n          <pre style=\"font-size: 10px; margin-top: 4px; background: #f5f5f5; padding: 8px; border-radius: 4px; overflow-x: auto; white-space: pre-wrap;\">${errorStack || 'No stack trace available'}</pre>\n        </details>\n      </div>\n    `;\n\n    if (progressText) {\n      progressText.textContent = \"FAILED\";\n      progressText.style.color = '#d32f2f';\n    }\n\n    if (progressBar) {\n      (progressBar as HTMLElement).style.background = '#d32f2f';\n    }\n  } finally {\n    button.disabled = false;\n  }\n}\n\n/**\n * Extract document structure - SIMPLIFIED VERSION (no tables)\n */\nasync function extractDocumentSimplified(): Promise<DocumentStructure> {\n  return Word.run(async (context) => {\n    const body = context.document.body;\n    body.load('text');\n    await context.sync();\n\n    const text = body.text;\n\n    // Extract placeholders\n    const placeholderRegex = /\\{\\{[^}]+\\}\\}/g;\n    const placeholders = Array.from(new Set(text.match(placeholderRegex) || []));\n\n    // Return simple structure WITHOUT tables for now\n    return {\n      text,\n      tables: [],\n      placeholders\n    };\n  });\n}\n\n/**\n * Load mock operations (DEMO MODE - NO BACKEND)\n * Simulates what a real AI backend would return\n */\nasync function getMockOperations(\n  structure: DocumentStructure,\n  addLog: (msg: string, isError?: boolean) => void\n): Promise<DocumentOperation[]> {\n  addLog(\"  📦 Using hardcoded mock data (no backend required)\");\n\n  // Simulate realistic network/processing delay for better UX\n  await new Promise(resolve => setTimeout(resolve, 800));\n\n  addLog(`  ✅ Mock data contains ${MOCK_LLM_OPERATIONS.length} operations`);\n  addLog(`  ℹ️  This is DEMO MODE - edit mockLLMResponse.ts to change operations`);\n\n  return MOCK_LLM_OPERATIONS;\n}\n\n/**\n * Execute operations on Word document\n */\nasync function executeOperations(operations: DocumentOperation[]): Promise<void> {\n  return Word.run(async (context) => {\n    console.log('[Operations] Starting execution, count:', operations.length);\n\n    // Enable track changes\n    context.document.changeTrackingMode = Word.ChangeTrackingMode.trackAll;\n\n    try {\n      context.document.properties.author = \"Kenneth AI\";\n      context.document.properties.load('author');\n    } catch (e) {\n      console.warn(\"Could not set author:\", e);\n    }\n\n    await context.sync();\n\n    let successCount = 0;\n    let failureCount = 0;\n\n    for (let i = 0; i < operations.length; i++) {\n      const operation = operations[i];\n      console.log(`[Operation ${i + 1}/${operations.length}] Type: ${operation.type}`);\n\n      try {\n        switch (operation.type) {\n          case 'fillTableCell':\n            await executeFillTableCell(context, operation);\n            break;\n          case 'replacePlaceholder':\n            await executeReplacePlaceholder(context, operation);\n            break;\n          case 'replaceText':\n            await executeReplaceText(context, operation);\n            break;\n          case 'deleteText':\n            await executeDeleteText(context, operation);\n            break;\n          default:\n            console.warn(`Unknown operation type:`, operation);\n            failureCount++;\n            continue;\n        }\n\n        await context.sync();\n        successCount++;\n      } catch (error) {\n        failureCount++;\n        console.error(`Operation ${i} failed:`, error);\n      }\n    }\n\n    console.log('[Operations] Complete:', { total: operations.length, success: successCount, failed: failureCount });\n  });\n}\n\n/**\n * Execute fillTableCell operation\n */\nasync function executeFillTableCell(\n  context: Word.RequestContext,\n  operation: Extract<DocumentOperation, { type: 'fillTableCell' }>\n): Promise<void> {\n  const tables = context.document.body.tables;\n  tables.load('items');\n  await context.sync();\n\n  if (operation.tableIndex >= tables.items.length) {\n    console.warn(`Table ${operation.tableIndex} not found`);\n    return;\n  }\n\n  const table = tables.items[operation.tableIndex];\n  const rows = table.rows;\n  rows.load('items');\n  await context.sync();\n\n  if (operation.row >= rows.items.length) {\n    console.warn(`Row ${operation.row} not found`);\n    return;\n  }\n\n  const row = rows.items[operation.row];\n  const cells = row.cells;\n  cells.load('items');\n  await context.sync();\n\n  if (operation.cell >= cells.items.length) {\n    console.warn(`Cell ${operation.cell} not found`);\n    return;\n  }\n\n  const cell = cells.items[operation.cell];\n  cell.body.clear();\n  cell.body.insertText(operation.value, Word.InsertLocation.start);\n}\n\n/**\n * Execute replacePlaceholder operation\n */\nasync function executeReplacePlaceholder(\n  context: Word.RequestContext,\n  operation: Extract<DocumentOperation, { type: 'replacePlaceholder' }>\n): Promise<void> {\n  const MAX_SEARCH_LENGTH = 200;\n  const isLongPlaceholder = operation.target.length > MAX_SEARCH_LENGTH;\n\n  let searchTerm = operation.target;\n\n  if (isLongPlaceholder) {\n    const prefixMatch = operation.target.match(/^(\\{\\{[\\s]*[A-Z_0-9]+[\\s]*:)/);\n    searchTerm = prefixMatch ? prefixMatch[1] : operation.target.substring(0, 100);\n  }\n\n  const searchResults = context.document.body.search(searchTerm, {\n    matchCase: false,\n    matchWholeWord: false\n  });\n  searchResults.load('items');\n  await context.sync();\n\n  if (searchResults.items.length === 0) {\n    console.warn(`Placeholder not found: ${searchTerm}`);\n    return;\n  }\n\n  let replacedCount = 0;\n\n  if (isLongPlaceholder) {\n    for (const result of searchResults.items) {\n      try {\n        const paragraph = result.paragraphs.getFirst();\n        paragraph.load('text');\n        await context.sync();\n\n        const paragraphText = paragraph.text;\n        const placeholderIndex = paragraphText.indexOf(operation.target);\n\n        if (placeholderIndex !== -1) {\n          const newText = paragraphText.substring(0, placeholderIndex) +\n                         operation.value +\n                         paragraphText.substring(placeholderIndex + operation.target.length);\n\n          paragraph.clear();\n          paragraph.insertText(newText, Word.InsertLocation.start);\n          replacedCount++;\n\n          if (operation.replaceAll === false) break;\n        }\n      } catch (expandError) {\n        result.insertText(operation.value, Word.InsertLocation.replace);\n        replacedCount++;\n        if (operation.replaceAll === false) break;\n      }\n    }\n  } else {\n    if (operation.replaceAll !== false) {\n      for (const result of searchResults.items) {\n        result.insertText(operation.value, Word.InsertLocation.replace);\n        replacedCount++;\n      }\n    } else {\n      searchResults.items[0].insertText(operation.value, Word.InsertLocation.replace);\n      replacedCount = 1;\n    }\n  }\n\n  console.log(`Replaced ${replacedCount} occurrences`);\n}\n\n/**\n * Execute replaceText operation\n */\nasync function executeReplaceText(\n  context: Word.RequestContext,\n  operation: Extract<DocumentOperation, { type: 'replaceText' }>\n): Promise<void> {\n  const searchResults = context.document.body.search(operation.target, {\n    matchCase: operation.matchCase || false,\n    matchWholeWord: operation.matchWholeWord || false\n  });\n  searchResults.load('items');\n  await context.sync();\n\n  if (searchResults.items.length === 0) {\n    console.warn(`Text not found: ${operation.target}`);\n    return;\n  }\n\n  for (const result of searchResults.items) {\n    result.insertText(operation.value, Word.InsertLocation.replace);\n  }\n}\n\n/**\n * Execute deleteText operation\n */\nasync function executeDeleteText(\n  context: Word.RequestContext,\n  operation: Extract<DocumentOperation, { type: 'deleteText' }>\n): Promise<void> {\n  const searchResults = context.document.body.search(operation.target, {\n    matchCase: false,\n    matchWholeWord: false\n  });\n  searchResults.load('items');\n  await context.sync();\n\n  if (searchResults.items.length === 0) {\n    console.warn(`Text not found: ${operation.target}`);\n    return;\n  }\n\n  for (const result of searchResults.items) {\n    result.delete();\n  }\n}\n","/**\n * Drafting Tab - AI Document Rewrite and Testing\n */\n\nimport { handleStructuredAIRewrite } from './ai-rewrite-structured';\n\n/**\n * Initialize the Drafting tab\n */\nexport function initializeDraftingTab() {\n  const aiRewriteBtn = document.getElementById('ai-rewrite-btn');\n  const testPingBtn = document.getElementById('test-ping-btn');\n\n  if (aiRewriteBtn) aiRewriteBtn.onclick = handleStructuredAIRewrite;\n  if (testPingBtn) testPingBtn.onclick = handleTestPing;\n}\n\n/**\n * Test backend connection (kept for debugging purposes)\n */\nasync function handleTestPing() {\n  const resultElement = document.getElementById(\"test-result\");\n  const button = document.getElementById(\"test-ping-btn\") as HTMLButtonElement;\n\n  if (!resultElement || !button) return;\n\n  button.disabled = true;\n  resultElement.textContent = \"Running comprehensive diagnostics...\\n\\n\";\n\n  // Test 1: Basic fetch capability\n  resultElement.textContent += \"TEST 1: Basic fetch capability\\n\";\n  try {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/todos/1\");\n    const data = await response.json();\n    resultElement.textContent += `✅ Fetch works! Got external data: ${data.title}\\n\\n`;\n  } catch (error) {\n    resultElement.textContent += `❌ Fetch completely blocked: ${error instanceof Error ? error.message : 'Unknown'}\\n`;\n    button.disabled = false;\n    return;\n  }\n\n  // Test 2: Environment info\n  resultElement.textContent += `\\n\\nTEST 2: Environment info\\n`;\n  resultElement.textContent += `Current origin: ${window.location.origin}\\n`;\n  resultElement.textContent += `Current URL: ${window.location.href}\\n`;\n  resultElement.textContent += `Protocol: ${window.location.protocol}\\n`;\n\n  button.disabled = false;\n}\n\n/**\n * Get Drafting tab HTML\n */\nexport function getDraftingTabHTML(): string {\n  return `\n    <div id=\"drafting-tab\" class=\"tab-content active\" style=\"display: flex; flex: 1; background: white; padding: 20px; overflow: auto; flex-direction: column; align-items: center; justify-content: flex-start;\">\n      <!-- DEBUG: Test Backend Connection -->\n      <div style=\"width: 100%; max-width: 500px; margin-bottom: 20px; padding: 16px; background: #fff3cd; border: 2px solid #ffc107; border-radius: 8px;\">\n        <h3 style=\"margin-bottom: 8px; color: #856404;\">🔧 Debug Test</h3>\n        <button id=\"test-ping-btn\" style=\"width: 100%; padding: 10px; background: #ffc107; color: #000; border: none; border-radius: 4px; font-weight: 600; cursor: pointer; margin-bottom: 8px;\">\n          Test Network Connection\n        </button>\n        <div id=\"test-result\" style=\"font-size: 12px; color: #856404; font-family: monospace; white-space: pre-wrap; max-height: 200px; overflow-y: auto;\"></div>\n      </div>\n\n      <!-- AI Rewrite Section -->\n      <div style=\"width: 100%; max-width: 500px; margin-bottom: 30px;\">\n        <h3 style=\"margin-bottom: 12px; color: #333;\">🤖 AI Document Rewrite (Demo Mode)</h3>\n        <p style=\"font-size: 14px; color: #666; margin-bottom: 8px;\">\n          Fill placeholders and tables using mock AI operations (no backend required)\n        </p>\n        <p style=\"font-size: 12px; color: #999; margin-bottom: 16px; padding: 8px; background: #f9f9f9; border-radius: 4px; border-left: 3px solid #667eea;\">\n          💡 This demo uses hardcoded data from <code>mockLLMResponse.ts</code>\n        </p>\n        <button id=\"ai-rewrite-btn\" style=\"width: 100%; padding: 14px 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border: none; border-radius: 8px; font-size: 16px; font-weight: 600; cursor: pointer;\">\n          ✨ AI Rewrite Document (Demo)\n        </button>\n        <div id=\"rewrite-status\" style=\"margin-top: 12px; text-align: center; color: #666; font-size: 14px;\"></div>\n\n        <!-- Progress Bar -->\n        <div id=\"progress-container\" style=\"display: none; margin-top: 16px;\">\n          <div id=\"progress-text\" style=\"font-size: 13px; color: #666; margin-bottom: 8px;\">Processing...</div>\n          <div style=\"width: 100%; height: 8px; background: #f0f0f0; border-radius: 4px; overflow: hidden;\">\n            <div id=\"progress-bar\" style=\"width: 0%; height: 100%; background: linear-gradient(90deg, #667eea 0%, #764ba2 100%); transition: width 0.3s ease;\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n","/**\n * Checklist Tab - Document completion checklist\n */\n\n/* global Word */\n\ninterface ChecklistItem {\n  id: string;\n  label: string;\n  description?: string;\n  checked: boolean;\n}\n\nconst DEFAULT_CHECKLIST_ITEMS: ChecklistItem[] = [\n  {\n    id: 'placeholders-filled',\n    label: 'All placeholders filled',\n    description: 'Verify all {{placeholder}} text has been replaced',\n    checked: false\n  },\n  {\n    id: 'tables-completed',\n    label: 'Tables completed',\n    description: 'Check all table cells contain correct data',\n    checked: false\n  },\n  {\n    id: 'dates-verified',\n    label: 'Dates verified',\n    description: 'Confirm all dates are accurate and formatted correctly',\n    checked: false\n  },\n  {\n    id: 'names-correct',\n    label: 'Names and entities correct',\n    description: 'Verify all company names, director names, and addresses',\n    checked: false\n  },\n  {\n    id: 'financial-data',\n    label: 'Financial data accurate',\n    description: 'Review share capital, shareholding percentages, and other figures',\n    checked: false\n  },\n  {\n    id: 'formatting-consistent',\n    label: 'Formatting consistent',\n    description: 'Check fonts, spacing, and styling throughout',\n    checked: false\n  },\n  {\n    id: 'track-changes-reviewed',\n    label: 'Track changes reviewed',\n    description: 'Accept or reject all tracked changes',\n    checked: false\n  },\n  {\n    id: 'final-proofread',\n    label: 'Final proofread complete',\n    description: 'Read through entire document for errors',\n    checked: false\n  }\n];\n\nlet checklistItems: ChecklistItem[] = [...DEFAULT_CHECKLIST_ITEMS];\n\n/**\n * Initialize the Checklist tab\n */\nexport function initializeChecklistTab() {\n  renderChecklist();\n\n  // Add event listeners\n  const resetBtn = document.getElementById('reset-checklist-btn');\n  const autoCheckBtn = document.getElementById('auto-check-btn');\n\n  if (resetBtn) resetBtn.onclick = handleResetChecklist;\n  if (autoCheckBtn) autoCheckBtn.onclick = handleAutoCheck;\n}\n\n/**\n * Render the checklist\n */\nfunction renderChecklist() {\n  const container = document.getElementById('checklist-items');\n  if (!container) return;\n\n  const completedCount = checklistItems.filter(item => item.checked).length;\n  const totalCount = checklistItems.length;\n  const percentage = Math.round((completedCount / totalCount) * 100);\n\n  // Update progress bar\n  const progressBar = document.getElementById('checklist-progress-bar');\n  const progressText = document.getElementById('checklist-progress-text');\n\n  if (progressBar) {\n    (progressBar as HTMLElement).style.width = `${percentage}%`;\n    (progressBar as HTMLElement).style.background = percentage === 100\n      ? '#10b981'\n      : 'linear-gradient(90deg, #667eea 0%, #764ba2 100%)';\n  }\n\n  if (progressText) {\n    progressText.textContent = `${completedCount} of ${totalCount} completed (${percentage}%)`;\n  }\n\n  // Render checklist items\n  container.innerHTML = checklistItems.map(item => `\n    <div class=\"checklist-item\" style=\"padding: 12px; margin-bottom: 8px; background: ${item.checked ? '#f0fdf4' : '#f9f9f9'}; border-radius: 6px; border: 1px solid ${item.checked ? '#86efac' : '#e0e0e0'}; cursor: pointer;\" data-id=\"${item.id}\">\n      <div style=\"display: flex; align-items: flex-start; gap: 12px;\">\n        <div style=\"flex-shrink: 0; width: 20px; height: 20px; border-radius: 4px; border: 2px solid ${item.checked ? '#10b981' : '#999'}; background: ${item.checked ? '#10b981' : 'white'}; display: flex; align-items: center; justify-content: center; margin-top: 2px;\">\n          ${item.checked ? '<span style=\"color: white; font-size: 14px;\">✓</span>' : ''}\n        </div>\n        <div style=\"flex: 1;\">\n          <div style=\"font-weight: ${item.checked ? '600' : '500'}; color: ${item.checked ? '#059669' : '#333'}; margin-bottom: 4px; text-decoration: ${item.checked ? 'line-through' : 'none'};\">\n            ${item.label}\n          </div>\n          ${item.description ? `<div style=\"font-size: 12px; color: #666; line-height: 1.4;\">${item.description}</div>` : ''}\n        </div>\n      </div>\n    </div>\n  `).join('');\n\n  // Add click handlers to each item\n  container.querySelectorAll('.checklist-item').forEach(element => {\n    element.addEventListener('click', (e) => {\n      const id = (e.currentTarget as HTMLElement).getAttribute('data-id');\n      if (id) toggleChecklistItem(id);\n    });\n  });\n}\n\n/**\n * Toggle a checklist item\n */\nfunction toggleChecklistItem(id: string) {\n  const item = checklistItems.find(i => i.id === id);\n  if (item) {\n    item.checked = !item.checked;\n    renderChecklist();\n  }\n}\n\n/**\n * Reset checklist\n */\nfunction handleResetChecklist() {\n  checklistItems = checklistItems.map(item => ({ ...item, checked: false }));\n  renderChecklist();\n  showNotification('Checklist reset', 'info');\n}\n\n/**\n * Auto-check for common issues\n */\nasync function handleAutoCheck() {\n  const button = document.getElementById('auto-check-btn') as HTMLButtonElement;\n  if (!button) return;\n\n  button.disabled = true;\n  button.textContent = 'Checking...';\n\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n      body.load('text');\n      await context.sync();\n\n      const text = body.text;\n\n      // Check for placeholders\n      const placeholderRegex = /\\{\\{[^}]+\\}\\}/g;\n      const placeholders = text.match(placeholderRegex);\n\n      if (!placeholders || placeholders.length === 0) {\n        const item = checklistItems.find(i => i.id === 'placeholders-filled');\n        if (item) item.checked = true;\n      }\n\n      renderChecklist();\n      showNotification('Auto-check complete!', 'success');\n    });\n  } catch (error) {\n    console.error('Auto-check failed:', error);\n    showNotification('Auto-check failed', 'error');\n  } finally {\n    button.disabled = false;\n    button.textContent = '🔍 Auto-check Document';\n  }\n}\n\n/**\n * Show notification\n */\nfunction showNotification(message: string, type: 'success' | 'error' | 'info' = 'info') {\n  const notification = document.createElement('div');\n  notification.style.cssText = `\n    position: fixed; top: 20px; right: 20px;\n    padding: 16px 24px; border-radius: 8px;\n    color: white; font-weight: 600; z-index: 9999;\n    background: ${type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#3b82f6'};\n    box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    animation: slideIn 0.3s ease;\n  `;\n  notification.textContent = message;\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.style.animation = 'slideOut 0.3s ease';\n    setTimeout(() => notification.remove(), 300);\n  }, 3000);\n}\n\n/**\n * Get Checklist tab HTML\n */\nexport function getChecklistTabHTML(): string {\n  return `\n    <div id=\"checklist-tab\" class=\"tab-content\" style=\"display: none; flex: 1; background: white; padding: 20px; overflow: auto; flex-direction: column;\">\n      <div style=\"max-width: 600px; width: 100%; margin: 0 auto;\">\n        <h3 style=\"margin-bottom: 8px; color: #333;\">✅ Document Checklist</h3>\n        <p style=\"font-size: 14px; color: #666; margin-bottom: 20px;\">\n          Track your document completion progress\n        </p>\n\n        <!-- Progress Bar -->\n        <div style=\"margin-bottom: 24px;\">\n          <div id=\"checklist-progress-text\" style=\"font-size: 13px; color: #666; margin-bottom: 8px;\">0 of 8 completed (0%)</div>\n          <div style=\"width: 100%; height: 12px; background: #f0f0f0; border-radius: 6px; overflow: hidden;\">\n            <div id=\"checklist-progress-bar\" style=\"width: 0%; height: 100%; background: linear-gradient(90deg, #667eea 0%, #764ba2 100%); transition: width 0.3s ease;\"></div>\n          </div>\n        </div>\n\n        <!-- Action Buttons -->\n        <div style=\"display: flex; gap: 8px; margin-bottom: 20px;\">\n          <button id=\"auto-check-btn\" style=\"flex: 1; padding: 10px; background: #667eea; color: white; border: none; border-radius: 6px; font-weight: 600; cursor: pointer; font-size: 14px;\">\n            🔍 Auto-check Document\n          </button>\n          <button id=\"reset-checklist-btn\" style=\"padding: 10px 16px; background: #f3f4f6; color: #666; border: none; border-radius: 6px; font-weight: 600; cursor: pointer; font-size: 14px;\">\n            Reset\n          </button>\n        </div>\n\n        <!-- Checklist Items -->\n        <div id=\"checklist-items\">\n          <!-- Populated by JavaScript -->\n        </div>\n      </div>\n    </div>\n  `;\n}\n","/**\n * Word-specific functionality\n * Main module for Word add-in - MODULAR VERSION\n */\n\n/* global document */\n\nimport { initializeDraftingTab, getDraftingTabHTML } from './drafting-tab';\nimport { initializeAIChatTab, getAIChatTabHTML } from './ai-chat-tab';\nimport { initializeChecklistTab, getChecklistTabHTML } from './checklist-tab';\n\n/**\n * Initialize Word add-in\n */\nexport function initialize() {\n  console.log('[Word] Initializing Word add-in...');\n\n  // Inject HTML into the app container\n  const appContainer = document.getElementById('app-container');\n  if (appContainer) {\n    appContainer.innerHTML = getWordHTML();\n    console.log('[Word] HTML injected successfully');\n  } else {\n    console.error('[Word] app-container not found!');\n    return;\n  }\n\n  // Setup tab switching\n  setupTabs();\n\n  // Initialize each tab module\n  initializeDraftingTab();\n  initializeAIChatTab();\n  initializeChecklistTab();\n\n  console.log('[Word] All tabs initialized');\n}\n\n/**\n * Setup tab switching\n */\nfunction setupTabs() {\n  const tabButtons = document.querySelectorAll('.tab-button');\n  const tabContents = document.querySelectorAll('.tab-content');\n\n  tabButtons.forEach(button => {\n    button.addEventListener('click', () => {\n      const targetTab = button.getAttribute('data-tab');\n\n      // Remove active class from all\n      tabButtons.forEach(btn => {\n        btn.classList.remove('active');\n        (btn as HTMLElement).style.background = '#1e1e1e';\n        (btn as HTMLElement).style.color = '#999';\n      });\n      tabContents.forEach(content => {\n        content.classList.remove('active');\n        (content as HTMLElement).style.display = 'none';\n      });\n\n      // Activate selected\n      button.classList.add('active');\n      (button as HTMLElement).style.background = '#2d2d2d';\n      (button as HTMLElement).style.color = 'white';\n\n      const targetContent = document.getElementById(`${targetTab}-tab`);\n      if (targetContent) {\n        targetContent.classList.add('active');\n        targetContent.style.display = 'flex';\n      }\n    });\n  });\n}\n\n/**\n * Get Word HTML template with all tabs\n */\nfunction getWordHTML(): string {\n  return `\n    <div style=\"width: 100%; height: 100vh; display: flex; flex-direction: column; background: white; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\">\n      <!-- Tab Navigation -->\n      <div style=\"display: flex; background: #1e1e1e; border-bottom: 1px solid #666;\">\n        <button class=\"tab-button active\" data-tab=\"drafting\" style=\"flex: 1; padding: 12px; background: #2d2d2d; color: white; border: none; cursor: pointer; font-weight: 600;\">Drafting</button>\n        <button class=\"tab-button\" data-tab=\"checklist\" style=\"flex: 1; padding: 12px; background: #1e1e1e; color: #999; border: none; cursor: pointer; font-weight: 600;\">Checklist</button>\n        <button class=\"tab-button\" data-tab=\"ai-chat\" style=\"flex: 1; padding: 12px; background: #1e1e1e; color: #999; border: none; cursor: pointer; font-weight: 600;\">AI Chat</button>\n      </div>\n\n      <!-- Tab Content Areas -->\n      ${getDraftingTabHTML()}\n      ${getChecklistTabHTML()}\n      ${getAIChatTabHTML()}\n    </div>\n  `;\n}\n","/**\n * AI Chat Tab - Future AI conversation interface\n */\n\n/**\n * Initialize the AI Chat tab\n */\nexport function initializeAIChatTab() {\n  // Future: Add chat message handling, input listeners, etc.\n  console.log('[AI Chat] Tab initialized');\n}\n\n/**\n * Get AI Chat tab HTML\n */\nexport function getAIChatTabHTML(): string {\n  return `\n    <div id=\"ai-chat-tab\" class=\"tab-content\" style=\"display: none; flex: 1; background: white; padding: 20px; flex-direction: column;\">\n      <div style=\"text-align: center; color: #999; flex: 1; display: flex; align-items: center; justify-content: center; flex-direction: column;\">\n        <div style=\"max-width: 400px;\">\n          <h3 style=\"margin-bottom: 16px; color: #333;\">💬 AI Chat</h3>\n          <p style=\"font-size: 14px; line-height: 1.6; margin-bottom: 24px;\">\n            Chat with Kenneth AI about your document, ask questions, and get intelligent assistance.\n          </p>\n          <div style=\"padding: 16px; background: #f9f9f9; border-radius: 8px; border: 1px solid #e0e0e0;\">\n            <p style=\"font-size: 13px; color: #666; margin: 0;\">\n              🚧 Coming soon: Interactive AI chat interface\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n"],"names":["MOCK_LLM_OPERATIONS","type","target","value","replaceAll","metadata","confidence","source","reasoning","tableIndex","row","cell","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","handleStructuredAIRewrite","_handleStructuredAIRewrite","_callee","statusElement","progressContainer","progressBar","progressText","button","debugLog","addLog","structure","errMsg","operations","_errMsg","_errMsg2","errorMessage","errorStack","_t","_t2","_t3","_t4","_context","document","getElementById","alert","message","isError","undefined","timestamp","Date","toLocaleTimeString","logLine","concat","push","console","log","color","innerHTML","map","line","join","disabled","style","display","textContent","width","extractDocumentSimplified","text","placeholders","Error","String","getMockOperations","executeOperations","setTimeout","error","stack","background","_extractDocumentSimplified","_callee3","_context3","Word","run","_ref","_callee2","context","body","placeholderRegex","_context2","load","sync","Array","from","Set","match","tables","_x10","_x","_x2","_getMockOperations","_callee4","_context4","_x3","_executeOperations","_callee6","_context6","_ref2","_callee5","successCount","failureCount","operation","_t5","_t6","_context5","changeTrackingMode","ChangeTrackingMode","trackAll","properties","author","warn","executeFillTableCell","executeReplacePlaceholder","executeReplaceText","executeDeleteText","total","success","failed","_x11","_x4","_x5","_executeFillTableCell","_callee7","table","rows","cells","_context7","items","clear","insertText","InsertLocation","start","_x6","_x7","_executeReplacePlaceholder","_callee8","isLongPlaceholder","searchTerm","prefixMatch","searchResults","replacedCount","_iterator","_step","result","paragraph","paragraphText","placeholderIndex","newText","_iterator2","_step2","_t8","_context8","substring","search","matchCase","matchWholeWord","_createForOfIteratorHelper","s","paragraphs","getFirst","indexOf","replace","err","_x8","_x9","_executeReplaceText","_callee9","_iterator3","_step3","_context9","_x0","_x1","_executeDeleteText","_callee0","_iterator4","_step4","_context0","delete","handleTestPing","_handleTestPing","resultElement","response","data","fetch","json","title","window","location","origin","href","protocol","_typeof","constructor","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","_toPrimitive","_toPropertyKey","checklistItems","id","label","description","checked","renderChecklist","container","completedCount","item","totalCount","percentage","Math","round","querySelectorAll","element","addEventListener","currentTarget","getAttribute","find","toggleChecklistItem","handleResetChecklist","showNotification","handleAutoCheck","_handleAutoCheck","notification","createElement","cssText","appendChild","animation","remove","initialize","tabButtons","tabContents","aiRewriteBtn","testPingBtn","appContainer","targetTab","btn","classList","content","add","targetContent","onclick","resetBtn","autoCheckBtn","initializeChecklistTab"],"sourceRoot":""}